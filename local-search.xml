<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>软工概论习题答案</title>
    <link href="/2025/06/15/%E8%BD%AF%E5%B7%A5%E6%A6%82%E8%AE%BA%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/"/>
    <url>/2025/06/15/%E8%BD%AF%E5%B7%A5%E6%A6%82%E8%AE%BA%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h3 id="太多了，自己看PDF👇"><a href="#太多了，自己看PDF👇" class="headerlink" title="太多了，自己看PDF👇"></a><div style="text-align:center"><font face="STCAIYUN">太多了，自己看PDF👇</font></div></h3><div style="text-align:center;font-size:50px"><b><a href="./1.pdf">PDF</a></b></div>]]></content>
    
    
    <categories>
      
      <category>软件工程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>张彤</tag>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件工程概论总结与复习II</title>
    <link href="/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E6%80%BB%E7%BB%93%E4%B8%8E%E5%A4%8D%E4%B9%A0II/"/>
    <url>/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E6%80%BB%E7%BB%93%E4%B8%8E%E5%A4%8D%E4%B9%A0II/</url>
    
    <content type="html"><![CDATA[<style>  #titles{  color:red  }  #subtitles{  color: black  }  </style><div id="subtitles"><font face="STCAIYUN">期末试题共五大题：</font></div> <div id="titles"><b><i>一、单选题（20个）。<br>二、填空题（10个空）。<br>三、判断题（20个）。<br>四、简答题（6-7个）。<br>五、应用题（应用画图题1个题）。</i></b></div> <br><h3 id="一、软件工程概述"><a href="#一、软件工程概述" class="headerlink" title="一、软件工程概述"></a>一、软件工程概述</h3><h4 id="1、软件危机与软件工程（重点）"><a href="#1、软件危机与软件工程（重点）" class="headerlink" title="1、软件危机与软件工程（重点）"></a>1、软件危机与软件工程（重点）</h4><ul><li>   软件的概念，特点；</li><li>   软件危机产生的原因</li><li>软件危机的主要表现</li><li>解决软件危机的主要方法。</li></ul><h4 id="2、软件生命周期（重点）"><a href="#2、软件生命周期（重点）" class="headerlink" title="2、软件生命周期（重点）"></a>2、软件生命周期（重点）</h4><ul><li>软件工程的概念，发展历史，三要素。</li><li>软件生命（生存）周期的划分，软件生命周期的各个阶段（按顺序）。</li><li>软件过程模型，各个过程模型特点，优缺点，几种模型之间的关系。（重中之重）</li><li>软件工程方法学的划分。</li></ul><h4 id="课后习题：1、2、4、5、6、7、8、13、14、15、17、20。"><a href="#课后习题：1、2、4、5、6、7、8、13、14、15、17、20。" class="headerlink" title="课后习题：1、2、4、5、6、7、8、13、14、15、17、20。"></a>课后习题：1、2、4、5、6、7、8、13、14、15、17、20。</h4><h3 id="二、结构化分析"><a href="#二、结构化分析" class="headerlink" title="二、结构化分析"></a>二、结构化分析</h3><ul><li>可行性研究的内容，对系统进行可行性分析一般包括哪三个方面？</li><li>什么是需求分析，任务。</li><li>结构化分析方法的基本思想</li><li>结构化分析模型（重点：E-R模型，数据流图），系统数据库E-R图的画法。 </li><li>E-R图的基本图形符号包括哪些？</li></ul><h4 id="课后习题：3、4、9、10、15。"><a href="#课后习题：3、4、9、10、15。" class="headerlink" title="课后习题：3、4、9、10、15。"></a>课后习题：3、4、9、10、15。</h4><h3 id="三、结构化设计"><a href="#三、结构化设计" class="headerlink" title="三、结构化设计"></a>三、结构化设计</h3><ul><li>软件设计的概念、目标和意义。</li><li>软件设计的原则，如何模块化。</li><li>程序流程图：画法、图符（程序流程图的基本符号）。</li><li>数据库结构设计。</li></ul><h4 id="课后习题：1、13-16-23。"><a href="#课后习题：1、13-16-23。" class="headerlink" title="课后习题：1、13-16,23。"></a>课后习题：1、13-16,23。</h4><h3 id="四、结构化编码和测试"><a href="#四、结构化编码和测试" class="headerlink" title="四、结构化编码和测试"></a>四、结构化编码和测试</h3><ul><li>白盒测试、黑盒测试的基本概念。</li><li>单元测试、集成测试的基本概念。</li></ul><h4 id="课后习题：10、11、12。"><a href="#课后习题：10、11、12。" class="headerlink" title="课后习题：10、11、12。"></a>课后习题：10、11、12。</h4><h3 id="五、面向对象分析"><a href="#五、面向对象分析" class="headerlink" title="五、面向对象分析"></a>五、面向对象分析</h3><ul><li>OO的基本概念，类的5个基本特征。</li><li>OO的软件工程方法的特征与优势。</li><li>用例模型的建立，包括用例图的功能，画法，用例间关系。</li><li>建立用例模型（毕业设计要用到，重点理解与掌握），建立对象模型、动态模型、功能模型这三个理解。</li></ul><h4 id="课后习题：1、4、5、6、10。"><a href="#课后习题：1、4、5、6、10。" class="headerlink" title="课后习题：1、4、5、6、10。"></a>课后习题：1、4、5、6、10。</h4><h3 id="六、面向对象设计"><a href="#六、面向对象设计" class="headerlink" title="六、面向对象设计"></a>六、面向对象设计</h3><ul><li>系统体系结构的概念，几种典型的体系结构。</li><li>C&#x2F;S、B&#x2F;S体系结构指的是什么？</li></ul><h4 id="课后习题：8、9。"><a href="#课后习题：8、9。" class="headerlink" title="课后习题：8、9。"></a>课后习题：8、9。</h4><h3 id="七、面向对象的实现与测试"><a href="#七、面向对象的实现与测试" class="headerlink" title="七、面向对象的实现与测试"></a>七、面向对象的实现与测试</h3><h3 id="八、软件维护"><a href="#八、软件维护" class="headerlink" title="八、软件维护"></a>八、软件维护</h3><ul><li>什么是软件维护？</li><li>一般有哪四种维护活动？<br></li></ul><h4 id="课后习题1、2。"><a href="#课后习题1、2。" class="headerlink" title="课后习题1、2。"></a>课后习题1、2。</h4>]]></content>
    
    
    <categories>
      
      <category>软件工程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>张彤</tag>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件工程概论试卷II</title>
    <link href="/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E8%AF%95%E5%8D%B7II/"/>
    <url>/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E8%AF%95%E5%8D%B7II/</url>
    
    <content type="html"><![CDATA[<h1 id="软件工程概论试卷II"><a href="#软件工程概论试卷II" class="headerlink" title="软件工程概论试卷II"></a><div style="text-align:center"><font face="STCAIYUN">软件工程概论试卷II</font></div></h1><div style="text-align:center"><img src="/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E8%AF%95%E5%8D%B7II/2.png" class></div>]]></content>
    
    
    <categories>
      
      <category>软件工程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>张彤</tag>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件工程概论试卷I</title>
    <link href="/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E8%AF%95%E5%8D%B7I/"/>
    <url>/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E8%AF%95%E5%8D%B7I/</url>
    
    <content type="html"><![CDATA[<h1 id="软件工程概论试卷I"><a href="#软件工程概论试卷I" class="headerlink" title="软件工程概论试卷I"></a><div style="text-align:center"><font face="STCAIYUN">软件工程概论试卷I</font></div></h1><div style="text-align:center"><img src="/2025/06/15/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E8%AF%95%E5%8D%B7I/1.png" class></div>]]></content>
    
    
    <categories>
      
      <category>软件工程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>张彤</tag>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>cloudflare 部署workers获取高速上网节点</title>
    <link href="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/"/>
    <url>/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="CloudFlare部署Workers获取优选ip节点"><a href="#CloudFlare部署Workers获取优选ip节点" class="headerlink" title="CloudFlare部署Workers获取优选ip节点"></a><div style="text-align:center">CloudFlare部署Workers获取优选ip节点</div></h1><h3 id="1-注册Cloudflare账号"><a href="#1-注册Cloudflare账号" class="headerlink" title="1.注册Cloudflare账号"></a>1.注册Cloudflare账号</h3><p><a href="https://www.cloudflare.com"><br><br>  点我前往注册<br>  </a></p><h3 id="2-进入首页，点击计算-Workers-and-Pages"><a href="#2-进入首页，点击计算-Workers-and-Pages" class="headerlink" title="2.进入首页，点击计算-&gt;Workers and Pages"></a>2.进入首页，点击计算-&gt;Workers and Pages</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/1.png" class><h3 id="3-点击创建"><a href="#3-点击创建" class="headerlink" title="3.点击创建"></a>3.点击创建</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/2.png" class><h3 id="4-选择Workers-Hello-World"><a href="#4-选择Workers-Hello-World" class="headerlink" title="4.选择Workers-&gt;Hello World"></a>4.选择Workers-&gt;Hello World</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/3.png" class><h3 id="5-点击部署"><a href="#5-点击部署" class="headerlink" title="5.点击部署"></a>5.点击部署</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/4.png" class><h3 id="6-左上角编辑代码"><a href="#6-左上角编辑代码" class="headerlink" title="6.左上角编辑代码"></a>6.左上角编辑代码</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/5.png" class><h3 id="7-将下列代码复制进去-然后点击右上角部署"><a href="#7-将下列代码复制进去-然后点击右上角部署" class="headerlink" title="7.将下列代码复制进去,然后点击右上角部署"></a>7.将下列代码复制进去,然后点击右上角部署</h3><p><a href="https://github.com/cmliu/edgetunnel/blob/main/_worker.js"><br><br>  点我前往复制<br>  </a></p><h3 id="8-返回worker界面点击设置-变量和机密-添加，设置一个密码"><a href="#8-返回worker界面点击设置-变量和机密-添加，设置一个密码" class="headerlink" title="8.返回worker界面点击设置-&gt;变量和机密-&gt;添加，设置一个密码"></a>8.返回worker界面点击设置-&gt;变量和机密-&gt;添加，设置一个密码</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/6.png" class><p><strong>变量名称PASSWORD全大写</strong></p><h3 id="9-返回worker界面，点击访问"><a href="#9-返回worker界面，点击访问" class="headerlink" title="9.返回worker界面，点击访问"></a>9.返回worker界面，点击访问</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/7.png" class><h3 id="10-按照图示访问"><a href="#10-按照图示访问" class="headerlink" title="10.按照图示访问"></a>10.按照图示访问</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/8.png" class><h3 id="11-选择对应的连接导入就可以使用了"><a href="#11-选择对应的连接导入就可以使用了" class="headerlink" title="11.选择对应的连接导入就可以使用了"></a>11.选择对应的连接导入就可以使用了</h3><img src="/2025/06/15/cloudflare-%E9%83%A8%E7%BD%B2workers%E8%8E%B7%E5%8F%96%E9%AB%98%E9%80%9F%E4%B8%8A%E7%BD%91%E8%8A%82%E7%82%B9/9.png" class>]]></content>
    
    
    <categories>
      
      <category>上网</category>
      
    </categories>
    
    
    <tags>
      
      <tag>上网</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>AE-播放器模板</title>
    <link href="/2025/06/13/AE-%E6%92%AD%E6%94%BE%E5%99%A8%E6%A8%A1%E6%9D%BF/"/>
    <url>/2025/06/13/AE-%E6%92%AD%E6%94%BE%E5%99%A8%E6%A8%A1%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<style>    #he{        color : yellow    }    #he:hover{        color: #1CE1EA    }    #first{        color:rgb(201, 52, 46)    }</style><h1 id="AE-音乐播放器模板"><a href="#AE-音乐播放器模板" class="headerlink" title="AE-音乐播放器模板"></a><div style="text-align:center"><font face="STCAIYUN">AE-音乐播放器模板</font></div></h1><h3 id="工程项目直接导入AE就可以用，导入自己的音频打关键帧就能做自己的作品"><a href="#工程项目直接导入AE就可以用，导入自己的音频打关键帧就能做自己的作品" class="headerlink" title="工程项目直接导入AE就可以用，导入自己的音频打关键帧就能做自己的作品"></a><div id="first">工程项目直接导入AE就可以用，导入自己的音频打关键帧就能做自己的作品</div></h3><p><strong>AE自行下载</strong></p><p><strong>样本👇</strong></p><iframe src="//player.bilibili.com/player.html?isOutside=true&aid=114674704128978&bvid=BV1uvMgzUER3&cid=30471095193&p=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="500px"></iframe><h5 id="———————————————————————————————————————————————————————————"><a href="#———————————————————————————————————————————————————————————" class="headerlink" title="———————————————————————————————————————————————————————————"></a>———————————————————————————————————————————————————————————</h5><p><b><i><a id="he" href="https://share.weiyun.com/AacvCKUk">点击下载</a><div></div></i></b></p>]]></content>
    
    
    <categories>
      
      <category>AE</category>
      
    </categories>
    
    
    <tags>
      
      <tag>AE</tag>
      
      <tag>制作</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>软件工程概论总结与复习</title>
    <link href="/2025/06/11/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E6%80%BB%E7%BB%93%E4%B8%8E%E5%A4%8D%E4%B9%A0/"/>
    <url>/2025/06/11/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E6%80%BB%E7%BB%93%E4%B8%8E%E5%A4%8D%E4%B9%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="软件工程概论总结与复习"><a href="#软件工程概论总结与复习" class="headerlink" title="软件工程概论总结与复习&gt;"></a><font face="STCAIYUN">软件工程概论总结与复习</font>&gt;</h1><img src="/2025/06/11/%E8%BD%AF%E4%BB%B6%E5%B7%A5%E7%A8%8B%E6%A6%82%E8%AE%BA%E6%80%BB%E7%BB%93%E4%B8%8E%E5%A4%8D%E4%B9%A0/1.png" class>]]></content>
    
    
    <categories>
      
      <category>软件工程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>张彤</tag>
      
      <tag>软件工程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云计算题库</title>
    <link href="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93/"/>
    <url>/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93/</url>
    
    <content type="html"><![CDATA[<h1 id="云计算题库"><a href="#云计算题库" class="headerlink" title="云计算题库&gt;"></a><font face="STCAIYUN">云计算题库</font>&gt;</h1><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93/1.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93/2.png" class>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>胡博问</tag>
      
      <tag>云计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云计算题库答案</title>
    <link href="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93%E7%AD%94%E6%A1%88/"/>
    <url>/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93%E7%AD%94%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<h1 id="云计算题库答案"><a href="#云计算题库答案" class="headerlink" title="云计算题库答案&gt;"></a><font face="STCAIYUN">云计算题库答案</font>&gt;</h1><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%A2%98%E5%BA%93%E7%AD%94%E6%A1%88/1.png" class>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>胡博问</tag>
      
      <tag>云计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云计算知识点</title>
    <link href="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h1 id="云计算知识点"><a href="#云计算知识点" class="headerlink" title="云计算知识点&gt;"></a><font face="STCAIYUN">云计算知识点</font>&gt;</h1><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9F%A5%E8%AF%86%E7%82%B9/1.png" class>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>胡博问</tag>
      
      <tag>云计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云计算试题（补考卷）</title>
    <link href="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/"/>
    <url>/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/</url>
    
    <content type="html"><![CDATA[<h1 id="2022-2023学第一学期补考试卷"><a href="#2022-2023学第一学期补考试卷" class="headerlink" title="2022-2023学第一学期补考试卷&gt;"></a><font face="STCAIYUN">2022-2023学第一学期补考试卷</font>&gt;</h1><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/1.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/2.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/3.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/4.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/5.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/6.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/7.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/8.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/9.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/10.png" class><img src="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E8%AF%95%E9%A2%98%EF%BC%88%E8%A1%A5%E8%80%83%E5%8D%B7%EF%BC%89/11.png" class>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>胡博问</tag>
      
      <tag>云计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>云计算问题集合</title>
    <link href="/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/"/>
    <url>/2025/06/11/%E4%BA%91%E8%AE%A1%E7%AE%97%E9%97%AE%E9%A2%98%E9%9B%86%E5%90%88/</url>
    
    <content type="html"><![CDATA[<h1 id="云计算重要问题"><a href="#云计算重要问题" class="headerlink" title="云计算重要问题"></a>云计算重要问题</h1><pre><code class="hljs">1.描述水平扩展与垂直扩展的概念，并举例说明两者的不同与特点2.描述三种不同的云交付模型，并对三种云交付模型给出自己的例子。指出用户对于三种不同云交付模型的可控程度。3.解释四种云部署模型，并突出四种模型之间的差别，举出四种模型的主要引用场合。4.解释电报交换，报文交换与分组交换，给出每一种交换的定义，并描述每一种交换的优点和缺点。5.解释OSI 7层网络模型，并分别给出数据链路层，网络层，传输层与应用层中的各两种协议6.描述不同的虚拟化层级，并给出每一种虚拟化层级的例子7.给出虚拟化和多租户技术的概念，并写出两者的相同点的不同点8.4种云安全的基本属性，以及每一种属性的基本概念9.给出4种不同的云安全威胁的种类，并为每一种云安全威胁给出一个例子10.描述非对称加密中，小红向小绿发送邮件的全过程11.描述与哈希碰撞相关的三种性质，并给出与三种性质相关的云攻击例子12. 描述非对称加密需要利用第三方机构CA来进行数字签名颁发的原因，并详细说明CA颁发数字证书的全过程13. 根据P82的图7-4，描述不同的逻辑网络边界所具有的功能，并指出逻辑网络边界在云安全上的应用14. 根据P86的图7-8，描述用户创建虚拟服务器的过程15. 给出三种云使用监控代理的基本概念，给出三者之间的区别，并为每一种代理举出一个引用场景16. 给出外层网络和内层网络出现服务故障时，SLA监控器记录日志的过程。17. 解释故障转移系统中，主动-主动与主动-被动的概念，联系与区别，并写出其对应的资源集群概念18. 给出云服务中管理系统的分类，并解释每一种管理系统的基本概念与核心组件19. 给出资源池的概念，举出三个资源池的例子；并给出同级资源池，嵌套资源池的概念，联系与区别20. 解释自动伸缩的概念，并解释动态可扩展架构，弹性资源容量架构与云爆发架构之间的区别与练习21. 解释弹性磁盘供给架构的基本概念，并结合P161图11-15给出弹性磁盘供给架构的整个过程。22. 给出四种不同的均衡负载架构，指出每一种不同均衡负载架构之间的区别。23. 解释不中断服务重定向架构以及零宕机架构的概念，区别和练习，并给出这两种架构所依赖的核心功能和架构</code></pre>]]></content>
    
    
    <categories>
      
      <category>云计算</category>
      
    </categories>
    
    
    <tags>
      
      <tag>胡博问</tag>
      
      <tag>云计算</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>临时邮箱</title>
    <link href="/2025/06/10/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1/"/>
    <url>/2025/06/10/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1/</url>
    
    <content type="html"><![CDATA[<style>    body{        text-align : center    }    #cc{        margin: auto;        width : 300px;        height : 650px             }    </style><p> <strong>无限临时邮箱，可以用来注册账号 —instant mail：</strong><br>    链接: <a href="https://pan.baidu.com/s/1-V-DTHjEbFopDNH9kuJpXA">https://pan.baidu.com/s/1-V-DTHjEbFopDNH9kuJpXA</a> 提取码: nqjy<br>   <div id="cc"> <img src="/2025/06/10/%E4%B8%B4%E6%97%B6%E9%82%AE%E7%AE%B1/%E6%BC%94%E7%A4%BA.jpg" class> <div></div></div></p>]]></content>
    
    
    <categories>
      
      <category>安卓福利</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邮箱</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术习题二</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E4%B9%A0%E9%A2%98%E4%BA%8C/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E4%B9%A0%E9%A2%98%E4%BA%8C/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机前沿技术第二次测验"><a href="#计算机前沿技术第二次测验" class="headerlink" title="计算机前沿技术第二次测验"></a>计算机前沿技术第二次测验</h1><h2 id="单选题（共10题，每题2分）"><a href="#单选题（共10题，每题2分）" class="headerlink" title="单选题（共10题，每题2分）"></a>单选题（共10题，每题2分）</h2><h3 id="1-以下哪项不是人工智能的典型应用？"><a href="#1-以下哪项不是人工智能的典型应用？" class="headerlink" title="1. 以下哪项不是人工智能的典型应用？"></a>1. 以下哪项不是人工智能的典型应用？</h3><ul><li>A. 图像识别</li><li>B. 搜索引擎</li><li>C. 温度计</li><li>D. 智能客服</li></ul><p><strong>答案：C</strong></p><h3 id="2-以下哪位被认为是人工智能之父？"><a href="#2-以下哪位被认为是人工智能之父？" class="headerlink" title="2. 以下哪位被认为是人工智能之父？"></a>2. 以下哪位被认为是人工智能之父？</h3><ul><li>A. 图灵</li><li>B. 赫布</li><li>C. 约翰·麦卡锡</li><li>D. 马尔科夫</li></ul><p><strong>答案：A&#x2F;C ???</strong></p><h3 id="3-联结主义模型训练时最常用的优化方法是？"><a href="#3-联结主义模型训练时最常用的优化方法是？" class="headerlink" title="3. 联结主义模型训练时最常用的优化方法是？"></a>3. 联结主义模型训练时最常用的优化方法是？</h3><ul><li>A. 梯度下降</li><li>B. 遗传算法</li><li>C. 线性规划</li><li>D. 穷举法</li></ul><p><strong>答案：A</strong></p><h3 id="4-符号主义方法所使用的推理方式主要包括？"><a href="#4-符号主义方法所使用的推理方式主要包括？" class="headerlink" title="4. 符号主义方法所使用的推理方式主要包括？"></a>4. 符号主义方法所使用的推理方式主要包括？</h3><ul><li>A. 模糊推理</li><li>B. 模拟推理</li><li>C. 演绎推理</li><li>D. 强化推理</li></ul><p><strong>答案：C</strong></p><h3 id="5-行为主义方法代表性的系统是？"><a href="#5-行为主义方法代表性的系统是？" class="headerlink" title="5. 行为主义方法代表性的系统是？"></a>5. 行为主义方法代表性的系统是？</h3><ul><li>A. 图灵测试</li><li>B. 感知器</li><li>C. 行为树</li><li>D. Braitenberg车辆</li></ul><p><strong>答案：D</strong></p><h3 id="6-以下哪个不是深度学习的特点？"><a href="#6-以下哪个不是深度学习的特点？" class="headerlink" title="6. 以下哪个不是深度学习的特点？"></a>6. 以下哪个不是深度学习的特点？</h3><ul><li>A. 多层结构</li><li>B. 自动特征提取</li><li>C. 需要小样本数据</li><li>D. 参数众多</li></ul><p><strong>答案：C</strong></p><h3 id="7-Transformer模型最初用于哪个任务？"><a href="#7-Transformer模型最初用于哪个任务？" class="headerlink" title="7. Transformer模型最初用于哪个任务？"></a>7. Transformer模型最初用于哪个任务？</h3><ul><li>A. 图像识别</li><li>B. 自动驾驶</li><li>C. 机器翻译</li><li>D. 游戏对战</li></ul><p><strong>答案：C</strong></p><h3 id="8-强化学习中智能体通过什么与环境交互？"><a href="#8-强化学习中智能体通过什么与环境交互？" class="headerlink" title="8. 强化学习中智能体通过什么与环境交互？"></a>8. 强化学习中智能体通过什么与环境交互？</h3><ul><li>A. 模型</li><li>B. 策略</li><li>C. 观察</li><li>D. 特征</li></ul><p><strong>答案：B</strong></p><h3 id="9-知识图谱的表示形式主要是？"><a href="#9-知识图谱的表示形式主要是？" class="headerlink" title="9. 知识图谱的表示形式主要是？"></a>9. 知识图谱的表示形式主要是？</h3><ul><li>A. XML结构</li><li>B. 树形结构</li><li>C. 图结构</li><li>D. 向量结构</li></ul><p><strong>答案：C</strong></p><h3 id="10-以下哪个不属于当前人工智能的发展趋势？"><a href="#10-以下哪个不属于当前人工智能的发展趋势？" class="headerlink" title="10. 以下哪个不属于当前人工智能的发展趋势？"></a>10. 以下哪个不属于当前人工智能的发展趋势？</h3><ul><li>A. 可解释性增强</li><li>B. 多模态融合</li><li>C. 专家系统回潮</li><li>D. 通用人工智能探索</li></ul><p><strong>答案：C</strong></p><h2 id="多选题（共5题，每题4分）"><a href="#多选题（共5题，每题4分）" class="headerlink" title="多选题（共5题，每题4分）"></a>多选题（共5题，每题4分）</h2><h3 id="11-以下哪些属于人工智能的典型应用？"><a href="#11-以下哪些属于人工智能的典型应用？" class="headerlink" title="11. 以下哪些属于人工智能的典型应用？"></a>11. 以下哪些属于人工智能的典型应用？</h3><ul><li>A. 智能翻译</li><li>B. 无人驾驶</li><li>C. 人脸识别</li><li>D. 占星术</li><li>E. 智能推荐</li></ul><p><strong>答案：A、B、C、E</strong></p><h3 id="12-以下哪些是深度学习常用的神经网络结构？"><a href="#12-以下哪些是深度学习常用的神经网络结构？" class="headerlink" title="12. 以下哪些是深度学习常用的神经网络结构？"></a>12. 以下哪些是深度学习常用的神经网络结构？</h3><ul><li>A. 卷积神经网络</li><li>B. 决策树</li><li>C. 循环神经网络</li><li>D. 自注意力网络</li><li>E. 感知器</li></ul><p><strong>答案：A、C、D</strong></p><h3 id="13-知识图谱中常见的三元组结构包含？"><a href="#13-知识图谱中常见的三元组结构包含？" class="headerlink" title="13. 知识图谱中常见的三元组结构包含？"></a>13. 知识图谱中常见的三元组结构包含？</h3><ul><li>A. 实体</li><li>B. 属性</li><li>C. 关系</li><li>D. 主题</li><li>E. 语义</li></ul><p><strong>答案：A、B、C</strong></p><h3 id="14-人工智能发展的驱动因素包括？"><a href="#14-人工智能发展的驱动因素包括？" class="headerlink" title="14. 人工智能发展的驱动因素包括？"></a>14. 人工智能发展的驱动因素包括？</h3><ul><li>A. 算力提升</li><li>B. 大数据</li><li>C. 新算法</li><li>D. 传感器精度下降</li><li>E. 应用需求增长</li></ul><p><strong>答案：A、B、C、E</strong></p><h3 id="15-强化学习中的核心组件包括？"><a href="#15-强化学习中的核心组件包括？" class="headerlink" title="15. 强化学习中的核心组件包括？"></a>15. 强化学习中的核心组件包括？</h3><ul><li>A. 环境</li><li>B. 状态</li><li>C. 动作</li><li>D. 奖励</li><li>E. 推理器</li></ul><p><strong>答案：A、B、C、D</strong></p><h2 id="判断题（共4题，每题2分）"><a href="#判断题（共4题，每题2分）" class="headerlink" title="判断题（共4题，每题2分）"></a>判断题（共4题，每题2分）</h2><h3 id="16-人工智能中的符号主义方法完全依赖数据驱动。"><a href="#16-人工智能中的符号主义方法完全依赖数据驱动。" class="headerlink" title="16. 人工智能中的符号主义方法完全依赖数据驱动。"></a>16. 人工智能中的符号主义方法完全依赖数据驱动。</h3><p><strong>答案：错误</strong></p><p><strong>解析：符号主义方法主张通过显式公理和逻辑体系搭建系统，依赖演绎推理而非数据驱动。</strong></p><h3 id="17-强化学习适用于需要自主决策的情境。"><a href="#17-强化学习适用于需要自主决策的情境。" class="headerlink" title="17. 强化学习适用于需要自主决策的情境。"></a>17. 强化学习适用于需要自主决策的情境。</h3><p><strong>答案：正确</strong></p><p><strong>解析：强化学习通过策略与环境交互，适用于自动驾驶等需自主决策的场景。</strong></p><h3 id="18-知识图谱只能用于自然语言处理。"><a href="#18-知识图谱只能用于自然语言处理。" class="headerlink" title="18. 知识图谱只能用于自然语言处理。"></a>18. 知识图谱只能用于自然语言处理。</h3><p><strong>答案：错误</strong></p><p><strong>解析：知识图谱源自语义网络和链接数据，应用涵盖语义搜索、数据整合等，不限于自然语言处理。</strong></p><h3 id="19-深度学习的训练过程通常是可解释的。"><a href="#19-深度学习的训练过程通常是可解释的。" class="headerlink" title="19. 深度学习的训练过程通常是可解释的。"></a>19. 深度学习的训练过程通常是可解释的。</h3><p><strong>答案：错误</strong></p><p><strong>解析：深度学习以多层参数和自动特征提取为特点，训练过程通常缺乏可解释性。</strong></p><h2 id="填空题（共3题，每题2分）"><a href="#填空题（共3题，每题2分）" class="headerlink" title="填空题（共3题，每题2分）"></a>填空题（共3题，每题2分）</h2><h3 id="20-深度学习通常需要使用▁结构以自动提取特征。"><a href="#20-深度学习通常需要使用▁结构以自动提取特征。" class="headerlink" title="20. 深度学习通常需要使用▁结构以自动提取特征。"></a>20. 深度学习通常需要使用▁结构以自动提取特征。</h3><p><strong>答案：多层神经网络</strong></p><h3 id="21-强化学习中，▁函数用于评估动作的好坏。"><a href="#21-强化学习中，▁函数用于评估动作的好坏。" class="headerlink" title="21. 强化学习中，▁函数用于评估动作的好坏。"></a>21. 强化学习中，▁函数用于评估动作的好坏。</h3><p><strong>答案：价值</strong></p><h3 id="22-知识图谱通过▁对实体进行连接，形成语义网络。"><a href="#22-知识图谱通过▁对实体进行连接，形成语义网络。" class="headerlink" title="22. 知识图谱通过▁对实体进行连接，形成语义网络。"></a>22. 知识图谱通过▁对实体进行连接，形成语义网络。</h3><p><strong>答案：关系</strong></p><h2 id="简答题（共3题）"><a href="#简答题（共3题）" class="headerlink" title="简答题（共3题）"></a>简答题（共3题）</h2><h3 id="23-简述联结主义的基本思想及其代表模型。（15分）"><a href="#23-简述联结主义的基本思想及其代表模型。（15分）" class="headerlink" title="23. 简述联结主义的基本思想及其代表模型。（15分）"></a>23. 简述联结主义的基本思想及其代表模型。（15分）</h3><p><strong>答案：</strong></p><p><strong>联结主义基本思想：</strong></p><p>利用数学模型研究人类认知方法，通过神经元的连接机制实现人工智能。</p><p><strong>代表模型</strong></p><ul><li>神经网络</li><li>支持向量机（SVM）</li></ul><h3 id="24-请说明强化学习与监督学习的主要区别。（15分）"><a href="#24-请说明强化学习与监督学习的主要区别。（15分）" class="headerlink" title="24. 请说明强化学习与监督学习的主要区别。（15分）"></a>24. 请说明强化学习与监督学习的主要区别。（15分）</h3><p><strong>答案：</strong></p><p>强化学习与监督学习的主要区别：</p><p><strong>学习机制差异</strong></p><p><strong>1.监督学习</strong></p><ul><li>依赖标注数据（输入输出对）</li><li>通过教师提供的明确标签进行学习</li></ul><p><strong>2.强化学习</strong></p><ul><li>通过环境互动获得反馈</li><li>需要自主探索最优策略</li></ul><p><strong>反馈形式差异</strong></p><p><strong>1.监督学习</strong></p><ul><li>接收即时准确的目标输出</li><li>直接修正预测误差</li></ul><p><strong>2.强化学习</strong></p><ul><li>接收延迟的奖励信号</li><li>需处理奖励稀疏性问题</li></ul><p><strong>应用场景差异</strong></p><p><strong>1.监督学习</strong></p><ul><li>适用于静态数据模式识别</li></ul><p><strong>2.强化学习</strong></p><ul><li>适用于动态决策过程</li><li>典型案例：围棋对弈（如AlphaGo）</li></ul><h3 id="25-人工智能未来的发展趋势有哪些？（16分）"><a href="#25-人工智能未来的发展趋势有哪些？（16分）" class="headerlink" title="25. 人工智能未来的发展趋势有哪些？（16分）"></a>25. 人工智能未来的发展趋势有哪些？（16分）</h3><p><strong>答案：</strong></p><p>人工智能未来发展趋势包括：</p><p><strong>核心要素发展</strong></p><ul><li>数据、算力、算法三要素持续演进</li></ul><p>关键技术方向</p><ul><li>机器学习自动化（AutoML）：实现算法选择、特征预处理与超参数设置自动化</li><li>分布式隐私保护：通过联邦学习技术打破数据孤岛，实现多机构联合建模</li><li>多学派方法融合：互补不同算法优势，提升综合性能</li><li>大规模无监督预训练：解决标注数据不足问题，挖掘无标签数据价值</li><li>因果学习方法：建立跨分布工作的因果模型，实现干预与反事实推断</li><li>可解释性AI（XAI）：提升算法透明度，保障公平性、安全性及隐私性</li></ul><p>硬件基础突破</p><ul><li>GPU等并行计算芯片加速数据处理效率</li><li>量子计算技术突破算力瓶颈，实现指数级增长</li><li>GPU与传统CPU运算速度差距最高达近七十倍</li></ul>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术习题一</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E4%B9%A0%E9%A2%98%E4%B8%80/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E4%B9%A0%E9%A2%98%E4%B8%80/</url>
    
    <content type="html"><![CDATA[<h1 id="计算机前沿技术第一次测验"><a href="#计算机前沿技术第一次测验" class="headerlink" title="计算机前沿技术第一次测验"></a>计算机前沿技术第一次测验</h1><h2 id="单选题（共10题，每题2分）"><a href="#单选题（共10题，每题2分）" class="headerlink" title="单选题（共10题，每题2分）"></a>单选题（共10题，每题2分）</h2><h3 id="1-以下哪项最准确地描述了人工智能的目标？"><a href="#1-以下哪项最准确地描述了人工智能的目标？" class="headerlink" title="1. 以下哪项最准确地描述了人工智能的目标？"></a>1. 以下哪项最准确地描述了人工智能的目标？</h3><ul><li>A. 替代人类工作</li><li>B. 模拟和扩展人类智能</li><li>C. 提高计算速度</li><li>D. 实现网络安全</li></ul><p><strong>答案：B</strong></p><p><strong>解析：人工智能研究目的是扩展人类智能</strong></p><h3 id="2-联结主义理论主要借鉴于以下哪一领域的研究成果？"><a href="#2-联结主义理论主要借鉴于以下哪一领域的研究成果？" class="headerlink" title="2. 联结主义理论主要借鉴于以下哪一领域的研究成果？"></a>2. 联结主义理论主要借鉴于以下哪一领域的研究成果？</h3><ul><li>A. 数学</li><li>B. 哲学</li><li>C. 神经科学</li><li>D. 语言学</li></ul><p><strong>答案：C</strong></p><p><strong>解析：联结主义基于神经元的连接机制</strong></p><h3 id="3-行为主义人工智能的代表模型是？"><a href="#3-行为主义人工智能的代表模型是？" class="headerlink" title="3. 行为主义人工智能的代表模型是？"></a>3. 行为主义人工智能的代表模型是？</h3><ul><li>A. 逻辑推理系统</li><li>B. 专家系统</li><li>C. 感知-行动系统</li><li>D. 模糊控制系统</li></ul><p><strong>答案：C</strong></p><p><strong>解析：行为主义采用感知-动作型控制系统</strong></p><h3 id="4-符号主义方法最强调以下哪个方面？"><a href="#4-符号主义方法最强调以下哪个方面？" class="headerlink" title="4. 符号主义方法最强调以下哪个方面？"></a>4. 符号主义方法最强调以下哪个方面？</h3><ul><li>A. 数据驱动</li><li>B. 黑箱模型</li><li>C. 逻辑推理</li><li>D. 模仿行为</li></ul><p><strong>答案：C</strong></p><p><strong>解析：符号主义强调逻辑推理与显式公理</strong></p><h3 id="5-深度学习相较于传统机器学习的优势主要体现在哪？"><a href="#5-深度学习相较于传统机器学习的优势主要体现在哪？" class="headerlink" title="5. 深度学习相较于传统机器学习的优势主要体现在哪？"></a>5. 深度学习相较于传统机器学习的优势主要体现在哪？</h3><ul><li>A. 算法更简单</li><li>B. 不需要特征提取</li><li>C. 训练速度更快</li><li>D. 数据需求更少</li></ul><p><strong>答案：B</strong></p><p><strong>解析：深度学习自动提取特征</strong></p><h3 id="6-强化学习中的奖励函数的作用是？"><a href="#6-强化学习中的奖励函数的作用是？" class="headerlink" title="6. 强化学习中的奖励函数的作用是？"></a>6. 强化学习中的奖励函数的作用是？</h3><ul><li>A. 限制行为</li><li>B. 提供反馈信号</li><li>C. 表示模型结构</li><li>D. 加速训练</li></ul><p><strong>答案：B</strong></p><p><strong>解析：强化学习通过奖励信号优化行为</strong></p><h3 id="7-知识图谱中的边表示？"><a href="#7-知识图谱中的边表示？" class="headerlink" title="7. 知识图谱中的边表示？"></a>7. 知识图谱中的边表示？</h3><ul><li>A. 节点属性</li><li>B. 概念分类</li><li>C. 实体关系</li><li>D. 数据类型</li></ul><p><strong>答案：C</strong></p><p><strong>解析：知识图谱边表示实体间关系</strong></p><h3 id="8-哪个不属于深度学习常见模型？"><a href="#8-哪个不属于深度学习常见模型？" class="headerlink" title="8. 哪个不属于深度学习常见模型？"></a>8. 哪个不属于深度学习常见模型？</h3><ul><li>A. 卷积神经网络</li><li>B. 决策树</li><li>C. 循环神经网络</li><li>D. Transformer</li></ul><p><strong>答案：B</strong></p><p><strong>解析：决策树属于传统机器学习</strong></p><h3 id="9-以下哪一项不是人工智能的发展趋势？"><a href="#9-以下哪一项不是人工智能的发展趋势？" class="headerlink" title="9. 以下哪一项不是人工智能的发展趋势？"></a>9. 以下哪一项不是人工智能的发展趋势？</h3><ul><li>A. 泛化能力增强</li><li>B. 可解释性提升</li><li>C. 数据依赖减弱</li><li>D. 资源消耗增加</li></ul><p><strong>答案：D</strong></p><p><strong>解析：资源消耗增加是现实问题而非趋势</strong></p><h3 id="10-人工智能的英文缩写是？"><a href="#10-人工智能的英文缩写是？" class="headerlink" title="10. 人工智能的英文缩写是？"></a>10. 人工智能的英文缩写是？</h3><ul><li>A. AG</li><li>B. AI</li><li>C. AS</li><li>D. AM</li></ul><p><strong>答案：B</strong></p><p><strong>解析：AI是人工智能标准缩写</strong></p><h2 id="多选题（共5题，每题4分）"><a href="#多选题（共5题，每题4分）" class="headerlink" title="多选题（共5题，每题4分）"></a>多选题（共5题，每题4分）</h2><h3 id="11-以下哪些属于人工智能的三大学派？"><a href="#11-以下哪些属于人工智能的三大学派？" class="headerlink" title="11. 以下哪些属于人工智能的三大学派？"></a>11. 以下哪些属于人工智能的三大学派？</h3><ul><li>A. 行为主义</li><li>B. 符号主义</li><li>C. 联结主义</li><li>D. 生物主义</li><li>E. 技术主义</li></ul><p><strong>答案：A、B、C</strong></p><p><strong>解析：</strong></p><h3 id="12-以下哪些属于深度学习的常见应用？"><a href="#12-以下哪些属于深度学习的常见应用？" class="headerlink" title="12. 以下哪些属于深度学习的常见应用？"></a>12. 以下哪些属于深度学习的常见应用？</h3><ul><li>A. 图像识别</li><li>B. 语音识别</li><li>C. 逻辑归纳</li><li>D. 机器翻译</li><li>E. 自动驾驶</li></ul><p><strong>答案：A、B、D、E</strong></p><p><strong>解析：</strong></p><h3 id="13-强化学习中涉及哪些基本要素？"><a href="#13-强化学习中涉及哪些基本要素？" class="headerlink" title="13. 强化学习中涉及哪些基本要素？"></a>13. 强化学习中涉及哪些基本要素？</h3><ul><li>A. 状态</li><li>B. 动作</li><li>C. 奖励</li><li>D. 训练样本</li><li>E. 策略</li></ul><p><strong>答案：A、B、C、E</strong></p><p><strong>解析：</strong></p><h3 id="14-知识图谱中的基本组成部分包括哪些？"><a href="#14-知识图谱中的基本组成部分包括哪些？" class="headerlink" title="14. 知识图谱中的基本组成部分包括哪些？"></a>14. 知识图谱中的基本组成部分包括哪些？</h3><ul><li>A. 实体</li><li>B. 属性</li><li>C. 关系</li><li>D. 向量</li><li>E. 网络结构</li></ul><p><strong>答案：A、B、C</strong></p><p><strong>解析：</strong></p><h3 id="15-人工智能的早期成就包括哪些？"><a href="#15-人工智能的早期成就包括哪些？" class="headerlink" title="15. 人工智能的早期成就包括哪些？"></a>15. 人工智能的早期成就包括哪些？</h3><ul><li>A. 图灵测试</li><li>B. 逻辑理论家</li><li>C. 感知器</li><li>D. AlphaGo</li><li>E. BERT</li></ul><p><strong>答案：A、B、C</strong></p><p><strong>解析：</strong></p><h2 id="判断题（共4题，每题2分）"><a href="#判断题（共4题，每题2分）" class="headerlink" title="判断题（共4题，每题2分）"></a>判断题（共4题，每题2分）</h2><h3 id="16-深度学习模型通常需要大量的训练数据。"><a href="#16-深度学习模型通常需要大量的训练数据。" class="headerlink" title="16. 深度学习模型通常需要大量的训练数据。"></a>16. 深度学习模型通常需要大量的训练数据。</h3><p><strong>答案：正确</strong></p><p><strong>解析：深度学习依赖多层神经网络自动提取特征，其参数量大、模型复杂度高，需要大量训练数据以避免过拟合。</strong></p><h3 id="17-联结主义模型无法进行任何形式的学习。"><a href="#17-联结主义模型无法进行任何形式的学习。" class="headerlink" title="17. 联结主义模型无法进行任何形式的学习。"></a>17. 联结主义模型无法进行任何形式的学习。</h3><p><strong>答案：错误</strong></p><p><strong>解析： 联结主义（如神经网络）的核心正是通过调整神经元连接权重实现学习，例如反向传播算法即为其典型学习机制。</strong></p><h3 id="18-行为主义强调内部表示和推理。"><a href="#18-行为主义强调内部表示和推理。" class="headerlink" title="18. 行为主义强调内部表示和推理。"></a>18. 行为主义强调内部表示和推理。</h3><p><strong>答案：错误</strong></p><p><strong>解析：行为主义强调通过环境反馈（如强化学习中的奖励信号）调整行为，而否定对内部心智状态或符号化推理的依赖。</strong></p><h3 id="19-符号主义方法主要用于处理结构化规则推理问题。"><a href="#19-符号主义方法主要用于处理结构化规则推理问题。" class="headerlink" title="19. 符号主义方法主要用于处理结构化规则推理问题。"></a>19. 符号主义方法主要用于处理结构化规则推理问题。</h3><p><strong>答案：正确</strong></p><p><strong>解析：符号主义基于形式化符号系统（如逻辑规则、知识图谱），擅长处理定义明确的推理任务（如定理证明、专家系统）。</strong></p><h2 id="填空题（共3题，每题2分）"><a href="#填空题（共3题，每题2分）" class="headerlink" title="填空题（共3题，每题2分）"></a>填空题（共3题，每题2分）</h2><h3 id="20-符号主义人工智能方法依赖于对知识的▁和规则的执行。"><a href="#20-符号主义人工智能方法依赖于对知识的▁和规则的执行。" class="headerlink" title="20. 符号主义人工智能方法依赖于对知识的▁和规则的执行。"></a>20. 符号主义人工智能方法依赖于对知识的▁和规则的执行。</h3><p><strong>答案：表示</strong></p><h3 id="21-强化学习中，智能体的目标是最大化▁的期望总和。"><a href="#21-强化学习中，智能体的目标是最大化▁的期望总和。" class="headerlink" title="21. 强化学习中，智能体的目标是最大化▁的期望总和。"></a>21. 强化学习中，智能体的目标是最大化▁的期望总和。</h3><p><strong>答案：奖励</strong></p><h3 id="22-知识图谱以▁结构组织信息，便于语义理解和推理。"><a href="#22-知识图谱以▁结构组织信息，便于语义理解和推理。" class="headerlink" title="22. 知识图谱以▁结构组织信息，便于语义理解和推理。"></a>22. 知识图谱以▁结构组织信息，便于语义理解和推理。</h3><p><strong>答案：图</strong></p><h2 id="简答题（共3题）"><a href="#简答题（共3题）" class="headerlink" title="简答题（共3题）"></a>简答题（共3题）</h2><h3 id="23-简述知识图谱的基本概念及其主要应用领域。（15分）"><a href="#23-简述知识图谱的基本概念及其主要应用领域。（15分）" class="headerlink" title="23. 简述知识图谱的基本概念及其主要应用领域。（15分）"></a>23. 简述知识图谱的基本概念及其主要应用领域。（15分）</h3><p><strong>答案：</strong></p><p>知识图谱基本概念及其应用领域</p><p>一、基本概念</p><ol><li>本质特征：<br>由相互连接的实体及其属性构成，每条知识表示为SPO三元组（主体谓词客体）<br>强调”things not strings”理念，关注字符串背后的实体关联而非单纯文本匹配</li><li>技术渊源：<br>继承自语义网络（1950s）、专家系统、语义网（1989）和关联数据（2006）<br>采用RDF标准数据模型，使用IRI（国际资源标识符）实现资源唯一标识</li><li>核心能力：<br>支持语义搜索、知识链接与推理补全<br>兼容知识表示、自然语言处理、机器学习等多领域技术</li></ol><p>二、主要应用领域</p><ol><li>搜索引擎优化：<br>生成实体”知识卡片”，提供结构化信息展示<br>提升查询结果精准度与信息获取效率</li><li>专业领域应用：<br>金融领域：构建公司图谱、整合交易&#x2F;政策&#x2F;财务多维度数据<br>医疗领域：中医药知识服务平台整合文献资源与语义网络</li><li>智能服务：<br>支持常识推理与语义问答<br>辅助自然语言理解与多模态数据分析</li><li>数据整合：<br>实现跨源数据融合与虚拟仓库集成<br>支持企业级知识管理与业务决策分析</li></ol><h3 id="24-人工智能的三大学派有何异同？（16分）"><a href="#24-人工智能的三大学派有何异同？（16分）" class="headerlink" title="24. 人工智能的三大学派有何异同？（16分）"></a>24. 人工智能的三大学派有何异同？（16分）</h3><p><strong>答案：</strong></p><p>人工智能三大学派的异同点如下：</p><p>共同点：<br>• 均围绕人类智能的模拟与实现展开研究<br>• 产生于不同时代背景与学科交叉领域<br>• 均形成了系统的技术实现路径</p><p>差异对比：</p><table><thead><tr><th>学派名称</th><th>核心理念</th><th>典型方法</th></tr></thead><tbody><tr><td>联结主义</td><td>基于神经元连接机制构建数学模型模拟人类认知</td><td>神经网络、SVM</td></tr><tr><td>符号主义</td><td>通过符号推导与逻辑体系构建显式人工智能系统，将学习视为逆向演绎过程</td><td>专家系统、知识图谱</td></tr><tr><td>行为主义</td><td>依托控制论原理，通过感知动作型控制系统模拟智能行为</td><td>强化学习</td></tr></tbody></table><h3 id="25-深度学习与传统机器学习的主要区别有哪些？（15分）"><a href="#25-深度学习与传统机器学习的主要区别有哪些？（15分）" class="headerlink" title="25. 深度学习与传统机器学习的主要区别有哪些？（15分）"></a>25. 深度学习与传统机器学习的主要区别有哪些？（15分）</h3><p><strong>答案：</strong></p><p>深度学习与传统机器学习的主要区别体现在：</p><ol><li><p>算法层次结构</p><p> 传统机器学习主要采用浅层学习算法（如BP算法、SVM、Boosting等），其局限性在于对复杂函数的表示能力有限。而深度学习通过深层网络结构突破了这一瓶颈。</p></li><li><p>数据处理能力</p><p> 传统机器学习在有限样本和计算单元条件下，对复杂数据处理受到制约。深度学习能够通过多层非线性变换处理更复杂的非结构化数据。</p></li></ol>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第九章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B9%9D%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B9%9D%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="9-知识图谱"><a href="#9-知识图谱" class="headerlink" title="9.知识图谱"></a>9.知识图谱</h1><p><a href="./9.%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1.pdf">9.知识图谱.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>总结：为什么需要知识图谱以及其相关概念</strong></p><p><strong>1知识图谱的必要性</strong></p><p>◦传统搜索引擎只能返回与查询字符串相关的网页，而无法理解查询背后的语义信息。知识图谱通过构建机器的先验知识，使计算机能够理解文本背后的含义。</p><p>◦知识图谱的核心理念是”things not strings”，即关注对象或事物本身，而非无意义的字符串。</p><p><strong>2知识图谱的概念</strong></p><p>◦知识图谱是由相互连接的实体及其属性构成，用SPO三元组（Subject-Predicate-Object）表示知识。</p><p>◦它的本质是为了表示知识，帮助机器理解文本背后的意义，并进行推理和关联。</p><p><strong>3发展历程</strong></p><p>◦知识图谱的思想可以追溯到上世纪五六十年代的语义网络（Semantic Network），后来发展出专家系统、语义网（Semantic Web）和关联数据（Linked Data）等。</p><p>◦Google于2012年发布知识图谱，旨在提升搜索引擎返回答案的质量和效率。</p><p><strong>4典型项目</strong></p><p><strong>◦Cyc</strong>：始于1984年，目标是建立最大的常识知识库，包含50万条术语和700万条断言，采用形式化知识表示方法。</p><p><strong>◦WordNet</strong>：由普林斯顿大学开发，主要用于词义消歧，定义了名词、动词、形容词和副词之间的语义关系。</p><p><strong>◦ConceptNet</strong>：基于众包构建的常识知识库，采用自然语言描述，支持多语言。</p><p><strong>◦DBPedia</strong>：从Wikipedia中抽取的链接数据集，采用RDF语义数据模型，包含30亿RDF三元组。</p><p><strong>◦YAGO</strong>：集成Wikipedia、WordNet和GeoNames的数据，包含时间和空间维度的属性描述。</p><p><strong>5技术概览</strong></p><p><strong>◦知识表示</strong>：包括语义网框架（如RDF、RDFS、OWL）和SPARQL查询语言。</p><p><strong>◦知识抽取</strong>：结合自然语言处理（NLP）和知识表示（KR）技术。</p><p><strong>◦知识存储</strong>：分为基于关系数据库和基于原生图的存储方式。</p><p><strong>◦知识问答（KBQA）</strong>：实现自然语言提问的自动回答。</p><p><strong>◦知识推理</strong>：基于已知事实推出未知事实。</p><p><strong>◦知识融合</strong>：整合不同数据源中的实体信息，形成更全面的描述。</p><p><strong>6典型案例</strong></p><p>◦知识图谱在搜索引擎、智能问答、推荐系统等领域有广泛应用，提升了用户体验和信息获取效率。</p><p>总结来说，知识图谱通过构建机器可理解的知识体系，帮助解决计算机对文本语义的理解问题，推动了人工智能和信息检索技术的发展。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>为什么需要知识图谱</strong></p><p>•解决计算机无法获取网络文本语义信息的问题</p><p>•提升搜索引擎返回的答案质量和用户查询效率</p><p><strong>什么是知识图谱</strong></p><p>•知识图谱的核心概念</p><p>•“things not strings”：获取字符串背后隐含的对象或事物</p><p><strong>一、看到的不仅仅是字符串</strong></p><p>•计算机面临的困境：无法理解文本背后的含义</p><p>•通过实体建模、属性填充和关系拓展构建机器的先验知识</p><p>•Google知识图谱的应用场景及意义</p><p><strong>实体扩展示例</strong></p><p>•围绕罗纳尔多实体进行扩展，构建知识图</p><p>•机器能够理解文本背后的含义</p><p><strong>搜索引擎改进</strong></p><p>•Google知识图谱提升搜索结果质量</p><p>•返回结构化信息和相关对象的基本信息</p><p><strong>发展趋势</strong></p><p>•知识图谱符合计算机科学与互联网发展潮流</p><p><strong>二、知识图谱的前世今生</strong></p><p>•知识图谱的概念溯源</p><p>•与语义网络、专家系统、语义网、关联数据的关系</p><p><strong>知识图谱定义</strong></p><p>•知识图谱是由相互连接的实体及其属性构成</p><p>•SPO三元组形式表示知识</p><p><strong>RDF形式化表示</strong></p><p>•资源描述框架（RDF）标准数据模型</p><p>•IRI、blank node和literal类型说明</p><p>•SPO三元组类型约束</p><p><strong>示例</strong></p><p>•使用RDF表示”罗纳尔多的中文名是罗纳尔多·路易斯·纳扎里奥·达·利马”</p><p><strong>正式知识图表示</strong></p><p>•知识图的正式图形化表示</p><p><strong>三、典型知识库项目</strong></p><p><strong>Cyc</strong></p><p>•常识知识库项目</p><p>•包含术语和断言</p><p>•形式化知识表示方法支持复杂推理</p><p><strong>WordNet</strong></p><p>•词典知识库</p><p>•定义名词、动词、形容词和副词之间的语义关系</p><p><strong>ConceptNet</strong></p><p>•常识知识库</p><p>•非形式化描述，接近自然语言</p><p>•支持多种语言</p><p><strong>Freebase</strong></p><p>•开放式协作知识库</p><p><strong>Wikidata</strong></p><p>•维基百科的数据集</p><p><strong>DBPedia</strong></p><p>•数据库版本的Wikipedia</p><p>•包含严格本体和大量RDF三元组</p><p><strong>YAGO</strong></p><p>•链接数据库</p><p>•集成Wikipedia、WordNet和GeoNames数据</p><p>•具有时间和空间维度属性</p><p><strong>中文知识图谱资源</strong></p><p>•OpenKG.CN</p><p>•Zhishi.me</p><p><strong>四、知识图谱技术概览</strong></p><p><strong>知识表示</strong></p><p>•核心概念和技术框架</p><p><strong>语义网知识表示框架</strong></p><p>•RDF、RDFS、OWL</p><p>•SPARQL：访问和操作RDF数据的核心技术</p><p><strong>知识图谱的分布式表示</strong></p><p>•分布式存储和处理技术</p><p><strong>知识抽取</strong></p><p>•自然语言处理（NLP）和知识表示（KR）</p><p><strong>知识存储</strong></p><p>•图的特点、复杂知识结构存储、索引和查询优化</p><p><strong>典型引擎</strong></p><p>•基于关系数据库的存储</p><p>•基于原生图的存储</p><p><strong>知识问答KBQA</strong></p><p>•自动问答系统基本形态</p><p>•KBQA实现流程</p><p><strong>知识推理</strong></p><p>•推理过程定义</p><p>•搜索引擎支持的推理能力</p><p><strong>知识融合</strong></p><p>•不同数据源中实体信息整合</p><p>•形成更加全面的实体信息</p><p><strong>五、典型案例</strong></p><p>•知识图谱在各领域的实际应用</p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第八章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%85%AB%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%85%AB%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="8-强化学习"><a href="#8-强化学习" class="headerlink" title="8.强化学习"></a>8.强化学习</h1><p><a href="./8.%E5%BC%BA%E5%8C%96%E5%AD%A6%E4%B9%A0.pdf">8.强化学习.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>以下是关于”行为主义（强化学习）和Deep Reinforcement Learning（深度强化学习）”内容的总结概括：</p><p><strong>强化学习概述</strong></p><p><strong>•核心概念</strong>：强化学习是一种机器学习方法，代理（Agent）通过与环境（Environment）交互，采取行动（Action），观察状态（State）并获得奖励（Reward），目标是最大化期望的奖励。</p><p><strong>•基本流程</strong>：代理从环境中接收观察结果，选择动作，执行后获得奖励和新的状态信息，从而不断优化策略。</p><p><strong>强化学习的特点</strong></p><p><strong>•奖励延迟</strong>：某些行为的长期影响可能在短期内无法显现，例如围棋中的早期牺牲可能带来后期优势。</p><p><strong>•行为序列学习</strong>：学习的是一系列行为，而非单一行为，目标是最大化整个过程的奖励。</p><p><strong>•动态互动</strong>：代理的行为会影响后续接收到的数据，需要持续与环境互动以更新算法。</p><p><strong>强化学习的应用</strong></p><p><strong>•游戏</strong>：如AlphaGo结合监督学习和强化学习，通过自我对弈提升能力。</p><p><strong>•机器人控制</strong>：如直升机、自动驾驶、机器人等领域的应用。</p><p><strong>•节能优化</strong>：谷歌使用DeepMind驱动的人工智能削减电费。</p><p><strong>•文本生成</strong>：通过强化学习生成自然语言文本。</p><p><strong>深度强化学习的核心方法</strong></p><p><strong>•Policy-based Approach</strong>：直接学习策略函数（Actor），输出每个动作的概率分布。</p><p><strong>•Value-based Approach</strong>：学习价值函数（Critic），评估策略的好坏，Q学习是典型代表。</p><p><strong>•Actor-Critic 方法</strong>：结合Policy-based和Value-based的优点，同时学习策略和价值函数。</p><p><strong>•A3C（Asynchronous Advantage Actor-Critic）</strong>：解决Actor-Critic难以收敛的问题，提供异步并发框架，显著提升训练效率。</p><p><strong>示例</strong></p><p><strong>•玩游戏</strong>：通过像素输入学习游戏操作，例如Space Invader中，代理通过观察屏幕像素选择移动或开火动作，并根据得分调整策略。</p><p><strong>•AlphaGo</strong>：结合Policy-based、Value-based和Model-based方法，通过大量自我对弈优化策略。</p><p><strong>参考资料</strong></p><p>•教材：《Reinforcement Learning: An Introduction》</p><p>•视频课程：David Silver和John Schulman的讲义及视频资源</p><p>•开源工具：OpenAI Gym和Universe，提供丰富的模拟环境供强化学习研究。</p><p>总结：强化学习通过代理与环境的交互，逐步优化策略以实现目标。深度强化学习结合神经网络，提升了复杂任务的学习能力，在游戏、机器人控制等领域展现出巨大潜力。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>行为主义（强化学习）</strong></p><p><strong>主要参考资源</strong></p><p>•Textbook: Reinforcement Learning: An Introduction</p><p>•Lectures of David Silver</p><p>•Lectures of John Schulman</p><p><strong>强化学习的基本方案</strong></p><p>•Agent与Environment交互</p><p>◦Observation（观察）</p><p>◦Action（动作）</p><p>◦Reward（奖励）</p><p>◦State（状态）</p><p>•目标：最大化期望的奖励</p><p><strong>核心概念</strong></p><p>1机器学习 ≈ 寻找一个函数</p><p>◦Function input: Observation</p><p>◦Function output: Action &#x3D; π(Observation)</p><p>◦Actor&#x2F;Policy: 学习采取最佳行动</p><p><strong>具体应用案例</strong></p><p><strong>学习下围棋</strong></p><p>•环境与奖励机制</p><p>◦如果赢了，reward &#x3D; 1</p><p>◦如果输了，reward &#x3D; -1</p><p>◦大多数情况下，reward &#x3D; 0</p><p>•Alpha Go 的方法</p><p>◦监督学习 + 强化学习</p><p>◦Learning from teacher 和 Learning from experience</p><p><strong>更多应用领域</strong></p><p>1直升机控制</p><p>2自动驾驶</p><p>3机器人</p><p>4谷歌DeepMind削减电费</p><p>5文本生成</p><p><strong>强化学习的实际例子</strong></p><p><strong>打游戏</strong></p><p>•机器学习像人类玩家一样打游戏</p><p>◦观察像素</p><p>◦自主采取适当行动</p><p>•使用环境工具</p><p>◦OpenAI Gym</p><p>◦OpenAI Universe</p><p><strong>游戏示例：Space Invader</strong></p><p>•游戏流程</p><p>◦初始状态 (s1) → 行动 (a1) → 回馈 (r1) → 新状态 (s2) → 行动 (a2) → 回馈 (r2)</p><p>◦最终目标：最大化累积奖励</p><p><strong>强化学习的特性</strong></p><p>•奖励延迟</p><p>◦早期行为可能在后期产生重要影响</p><p>◦机器需要理解一系列行为的整体价值</p><p>•数据动态性</p><p>◦机器通过与环境互动获取数据并更新算法</p><p><strong>强化学习的核心方法</strong></p><p><strong>Policy-based Approach</strong></p><p>•学习一个Actor</p><p>◦神经网络作为Actor</p><p>▪输入：机器的观察表示为向量或矩阵</p><p>▪输出：每个行动相关的神经元概率分布</p><p><strong>Value-based Approach</strong></p><p>•学习一个Critic</p><p>◦Critic评估Actor的好坏</p><p>◦Q-学习方法</p><p><strong>Actor-Critic 方法</strong></p><p>•结合Policy-based和Value-based</p><p>◦TD或MC方法</p><p>◦A3C框架</p><p>▪每个worker从global network复制参数</p><p>▪不同worker与环境互动</p><p>▪计算各自梯度并传回global network进行更新</p><p><strong>Alpha Go 的综合方法</strong></p><p>•Policy-based + Value-based + Model-based</p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第七章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%83%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%83%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="7-深度学习框架"><a href="#7-深度学习框架" class="headerlink" title="7.深度学习框架"></a>7.深度学习框架</h1><p><a href="./7.%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A1%86%E6%9E%B6.pdf">7.深度学习框架.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>深度学习框架总结</strong></p><p><strong>1. 概述</strong></p><p>随着深度学习技术的发展，各大公司和高校推出了多种深度学习框架，如TensorFlow、PyTorch、Caffe、Theano、Keras等。这些框架广泛应用于计算机视觉、语音识别、自然语言处理等领域，并取得了显著效果。</p><p><strong>2. 主要深度学习框架介绍</strong></p><p><strong>•Theano</strong></p><p>◦开发于蒙特利尔大学LISA实验室，是首个有较大影响力的Python深度学习框架。</p><p>◦特点：支持数学表达式的定义、优化和计算，尤其擅长多维数组运算。</p><p>◦缺点：调试困难，构建图慢，已于2017年停止开发。</p><p>◦评价：作为先驱框架，为后续框架奠定了基础，但不建议继续学习。</p><p><strong>•TensorFlow</strong></p><p>◦由Google推出，基于DistBelief构建，是目前最流行的深度学习框架。</p><p>◦特点：基于计算图实现自动微分系统，支持多种编程接口（Python、C++等）。</p><p>◦缺点：系统设计复杂，接口变动频繁，文档混乱，学习曲线陡峭。</p><p>◦评价：尽管存在缺陷，但由于强大的社区支持和推广能力，适合生产环境。</p><p><strong>•PyTorch</strong></p><p>◦由Facebook人工智能研究院开源，迅速成为研究领域的热门框架。</p><p>◦特点：提供动态图机制和先进的自动求导系统，易于使用。</p><p>◦评价：因其灵活性和易用性，在研究领域广受欢迎，热度持续上升。</p><p><strong>•Keras</strong></p><p>◦高层神经网络API，支持快速实验，可使用TensorFlow、Theano、CNTK作为后端。</p><p>◦特点：简单易学，减少用户工作量。</p><p>◦缺点：过度封装导致灵活性不足，性能较慢。</p><p>◦评价：适合初学者入门，但在高级应用中受限。</p><p><strong>•Caffe&#x2F;Caffe2</strong></p><p>◦Caffe：清晰高效的框架，核心语言为C++，支持命令行、Python和MATLAB接口。</p><p>◦Caffe2：继承Caffe优点，注重轻量级和便携性，支持多平台部署。</p><p>◦缺点：Caffe灵活性不足，Caffe2文档不完善。</p><p>◦评价：Caffe在计算机视觉领域曾占重要地位，Caffe2适合生产环境。</p><p><strong>•MXNet</strong></p><p>◦支持多种编程语言，分布式性能强大，内存优化显著。</p><p>◦缺点：推广力度不足，文档更新滞后。</p><p>◦评价：适合AWS云平台使用，但流行度有限。</p><p><strong>•CNTK</strong></p><p>◦由微软开发，性能突出，尤其在语音领域表现优异。</p><p>◦缺点：社区活跃度低，推广不足。</p><p>◦评价：适合语音相关研究。</p><p><strong>3. 其他框架</strong></p><p>还有其他一些框架如PaddlePaddle、DyNet、DeepLearning4J等，各有特色，但流行度和关注度相对较低。</p><p><strong>4. AI实践：MNIST手写数字识别</strong></p><p>•使用Keras搭建卷积神经网络LeNet进行MNIST数据集的手写数字识别。</p><p>•Keras因其简洁易用的特点被选中，提供了简单的API来构建和训练神经网络。</p><p>•安装依赖库后，通过Keras-MNIST-LeNet.html文件实现具体操作。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>深度学习框架概述</strong></p><p>•常见的深度学习框架及其应用领域</p><p>1框架：TensorFlow、PyTorch、Caffe、Theano、Keras等</p><p>2应用领域：计算机视觉、语音识别、自然语言处理与生物信息学</p><p><strong>Theano</strong></p><p><strong>核心特点</strong></p><p>•开发背景：诞生于蒙特利尔大学LISA实验室，2008年开始开发</p><p>•功能描述：支持定义、优化和计算数学表达式，特别是多维数组（numpy.ndarray）</p><p>•性能优势：通过GPU加速，速度远超基于CPU计算的C语言</p><p><strong>设计与局限</strong></p><p>•学术气息浓厚但工程设计有缺陷</p><p>•缺点：难调试、构建图慢</p><p>•第三方框架：Lasagne、Blocks、PyLearn2和Keras</p><p><strong>发展历程</strong></p><p>•2017年9月28日，Yoshua Bengio宣布Theano即将停止开发</p><p>•历史贡献：为深度学习研究人员早期研究提供了极大帮助</p><p><strong>点评</strong></p><p>•不建议作为研究工具继续学习</p><p><strong>TensorFlow</strong></p><p><strong>核心特点</strong></p><p>•开发背景：由Google Brain团队开发，2015年11月10日开源</p><p>•功能描述：支持机器学习和深度神经网络研究，可应用于众多领域</p><p>•技术特点：基于计算图实现自动微分系统，使用数据流图进行数值计算</p><p><strong>设计与局限</strong></p><p>•系统设计复杂：GitHub代码仓库总代码量超过100万行</p><p>•接口问题：频繁变动且向后兼容性差</p><p>•文档问题：缺乏条理和层次，入门教程不足</p><p>•第三方框架：Keras、Sonnet、TFLearn等</p><p><strong>发展现状</strong></p><p>•当前最流行的深度学习框架</p><p>•社区强大，适合生产环境</p><p><strong>点评</strong></p><p>•不完美但最流行的深度学习框架</p><p><strong>PyTorch</strong></p><p><strong>核心特点</strong></p><p>•开发背景：Facebook人工智能研究院（FAIR）团队于2017年1月开源</p><p>•功能描述：提供最先进的自动求导系统，成为动态图框架</p><p>•发展趋势：自发布起关注度持续上升</p><p><strong>设计与优势</strong></p><p>•易用性：Python接口友好，生态完整</p><p>•技术特点：重构Lua Torch模块，新增动态图支持</p><p><strong>点评</strong></p><p>•快速流行于研究领域</p><p><strong>Keras</strong></p><p><strong>核心特点</strong></p><p>•开发背景：纯Python编写，支持TensorFlow、Theano及CNTK作为后端</p><p>•功能描述：高层神经网络API，支持快速实验</p><p><strong>设计与局限</strong></p><p>•优点：一致而简洁的API，减少用户工作量</p><p>•缺点：过度封装导致灵活性丧失，程序运行缓慢</p><p><strong>点评</strong></p><p>•入门简单但不够灵活，使用受限</p><p><strong>Caffe&#x2F;Caffe2</strong></p><p><strong>核心特点</strong></p><p>•开发背景：核心语言为C++，支持命令行、Python和MATLAB接口</p><p>•功能描述：清晰高效的深度学习框架，支持CPU和GPU运行</p><p><strong>设计与局限</strong></p><p>•优点：简洁快速</p><p>•缺点：缺少灵活性，扩展困难，依赖环境配置复杂</p><p><strong>发展历程</strong></p><p>•曾占据计算机视觉研究领域的半壁江山</p><p>•Caffe2：继承Caffe优点，解决瓶颈问题，强调便携性和移动端部署</p><p><strong>点评</strong></p><p>•性能优异，几乎全平台支持，适合生产环境</p><p><strong>MXNet</strong></p><p><strong>核心特点</strong></p><p>•开发背景：由一群学生开发，后被AWS选为官方深度学习平台</p><p>•功能描述：支持多种编程语言，超强分布式支持和显存优化</p><p><strong>设计与局限</strong></p><p>•优点：内存和显存占用小，分布式性能优越</p><p>•缺点：推广不力，文档更新不及时</p><p><strong>生态建设</strong></p><p>•MinPy、Keras和Gluon接口推出</p><p>•Gluon模仿PyTorch接口设计，吸引新用户</p><p><strong>点评</strong></p><p>•文档略混乱，但分布式性能强大，适合AWS云平台使用</p><p><strong>CNTK</strong></p><p><strong>核心特点</strong></p><p>•开发背景：微软研究院开发，2015年8月开源</p><p>•功能描述：描述神经网络为计算图结构，支持CPU和GPU模式</p><p><strong>设计与优势</strong></p><p>•性能突出：比主流工具更强</p><p>•领域优势：在语音领域效果显著</p><p><strong>点评</strong></p><p>•社区不够活跃，但性能均衡，擅长语音相关研究</p><p><strong>其他框架</strong></p><p>•PaddlePaddle：百度开源</p><p>•DyNet：CMU开发</p><p>•tiny-dnn：简洁无依赖符合C++11标准</p><p>•DeepLearning4J：使用Java开发，文档优秀</p><p>•Nervana：英特尔开源</p><p>•DSSTNE：Amazon开源</p><p><strong>AI实践：MNIST手写数字识别</strong></p><p><strong>数据集描述</strong></p><p>•数据集规模：包含70000张手写数字图片，60000张训练图片和10000张测试图片</p><p>•数据来源：高中生和工作人员</p><p>•数据格式：每张图片为28x28像素，转成784的一维向量存储</p><p><strong>使用Keras搭建卷积神经网络</strong></p><p>•Keras优点：简洁好用，提供简单模块化API</p><p>•安装依赖库：Numpy、scipy、scikit-learn、matplotlib、pandas、graphviz、pydot、h5py、Theano、TensorFlow、Keras</p><p>•实现方法：搭建卷积神经网络LeNet用于手写数字识别</p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第六章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%85%AD%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%85%AD%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="6-表示学习和生成式模型"><a href="#6-表示学习和生成式模型" class="headerlink" title="6.表示学习和生成式模型"></a>6.表示学习和生成式模型</h1><p><a href="./6.%E8%A1%A8%E7%A4%BA%E5%AD%A6%E4%B9%A0%E5%92%8C%E7%94%9F%E6%88%90%E5%BC%8F%E6%A8%A1%E5%9E%8B.pdf">6.表示学习和生成式模型.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><h2 id="表示学习和生成式模型总结"><a href="#表示学习和生成式模型总结" class="headerlink" title="表示学习和生成式模型总结"></a><strong>表示学习和生成式模型总结</strong></h2><h3 id="1-表示学习（Representation-Learning）"><a href="#1-表示学习（Representation-Learning）" class="headerlink" title="1. 表示学习（Representation Learning）"></a><strong>1. 表示学习（Representation Learning）</strong></h3><ul><li><strong>定义与目标</strong>：表示学习是从未标记数据中提取特征的技术，旨在从未标注的数据中自动学习有用的特征表示。</li><li><strong>背景</strong>：大多数数据是非结构化和未标记的，获取新标签缓慢且昂贵。因此，能够从未标记数据中提取特征以提高数据有限任务性能的算法非常有价值。</li><li><strong>方法</strong>：通过在辅助监督学习任务上训练神经网络来实现特征提取。例如，词向量模型（Word2Vec）是表示学习的一个经典应用，用于自然语言处理（NLP）任务。</li><li><strong>优势</strong>：相比于传统的无监督学习技术，表示学习提供了更灵活和强大的特征提取能力。</li></ul><h3 id="2-生成模型（Generative-Model）"><a href="#2-生成模型（Generative-Model）" class="headerlink" title="2. 生成模型（Generative Model）"></a><strong>2. 生成模型（Generative Model）</strong></h3><ul><li><strong>定义与目标</strong>：生成模型通过学习训练数据的分布模型来生成新的、原创的数据。它不仅关注数据的分类或预测，还关注数据的生成过程。</li></ul><p><strong>频率学派与贝叶斯学派</strong>：</p><ul><li><strong>频率学派</strong>：基于大样本理论，将概率看作频率的极限，强调通过样本信息推断总体参数。</li><li><strong>贝叶斯学派</strong>：认为未知量是随机的，用概率分布描述未知参数，强调先验信息与后验信息的结合。</li></ul><p><strong>生成模型 vs 判别模型</strong>：</p><ul><li><strong>判别模型</strong>：直接学习决策函数 Y&#x3D;f(X) 或条件概率分布 P(Y|X)。</li><li><strong>生成模型</strong>：学习联合概率密度分布 P(X,Y)，然后求出条件概率分布 P(Y|X)。</li></ul><p><strong>生成模型类型</strong>：</p><ul><li><strong>GAN（生成对抗网络）</strong>：通过生成器和判别器的对抗训练来生成数据。</li><li><strong>VAE（变分自动编码器）</strong>：结合了自编码器和隐变量模型的思想，通过变分推断学习数据分布。</li><li><strong>扩散模型（Diffusion Model）</strong>：包括前向扩散过程（逐渐添加高斯噪音直至变成随机噪音）和反向生成过程（从随机噪音开始逐渐去噪音直至生成图像）。</li></ul><h3 id="3-关键技术与工具"><a href="#3-关键技术与工具" class="headerlink" title="3. 关键技术与工具"></a><strong>3. 关键技术与工具</strong></h3><ul><li><strong>降维</strong>：减少描述数据的特征数量的过程，可以通过选择或提取实现，用于数据可视化、数据存储和繁重计算等场景。</li><li><strong>奇异值分解（SVD）</strong>：一种矩阵因子分解方法，用于数据降维和特征提取。</li><li><strong>KL散度</strong>：用于度量两个分布之间的差距，帮助优化生成模型。</li><li><strong>Word2Vec</strong>：通过上下文学习词向量，捕捉词的语义信息。</li></ul><h3 id="4-应用"><a href="#4-应用" class="headerlink" title="4. 应用"></a><strong>4. 应用</strong></h3><ul><li><strong>生成式人工智能（GAI）</strong>：通过学习训练数据的分布模型生成新的、原创的数据。</li><li><strong>人工智能生成内容（AIGC）</strong>：利用人工智能技术生成各种形式的内容，如文字、图像、音频和视频等。</li></ul><p>以上是对表示学习和生成式模型的主要内容的概括，涵盖了基本概念、理论基础、关键技术和具体应用。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>自编码器与生成式建模</strong></p><p>•传统自编码器用于降维或特征学习</p><p>•自编码器与潜变量模型理论的联系使其成为生成式建模的重要工具</p><p><strong>什么是降维？</strong></p><p>•定义：减少描述数据的特征数量的过程</p><p>•方法：选择（保留部分现有特征）或提取（基于旧特征生成新特征）</p><p>•应用场景：数据可视化、数据存储、繁重计算等</p><p>•编码器与解码器的概念：编码器压缩数据，解码器解压缩数据，可能有信息损失</p><p><strong>奇异值分解（SVD）</strong></p><p>•定义：将任意m×n矩阵分解为三个矩阵相乘的形式</p><p>•结果：m阶正交矩阵、m×n矩形对角矩阵、n阶正交矩阵</p><p>•数据降维应用：保留较大特征值及其对应的特征向量，解释绝大部分信息</p><p><strong>表示学习（representation learning）</strong></p><p><strong>非结构化数据处理挑战</strong></p><p>•大量非结构化和未标记数据的存在</p><p>•标记数据获取缓慢且昂贵</p><p>•提取特征以提高数据有限任务性能的算法价值</p><p><strong>无监督学习中的特征提取</strong></p><p>•算法试图发现描述数据集”结构”的潜在特征</p><p>•示例：低秩奇异值分解（主成分分析）</p><p><strong>深度学习在特征提取中的应用</strong></p><p>•表示学习通过训练神经网络从未标记数据中提取特征</p><p>•word2vec作为表示学习的经典应用</p><p><strong>自然语言处理中的词向量模型</strong></p><p>•离散符号序列表示问题</p><p>•one-hot表示的问题：稀疏、正交、弱语义</p><p>•解决方案：学习将相似性编码到向量本身</p><p><strong>词的上下文表示</strong></p><p>•目标：包含语义信息并直接度量文本之间的语义相似度</p><p>•分布式表示思想：相似上下文中的词具有相似意义</p><p><strong>深度学习的优势</strong></p><p>•手工特征耗时耗力</p><p>•自动特征学习快速便捷</p><p>•提供通用学习框架，支持无监督和监督学习</p><p><strong>神经嵌入模型（Neural Embedding Models）</strong></p><p>•上下文建模及目标词关系建模</p><p>•Word2Vec模型：Skip-Gram和CBOW两种模型</p><p><strong>统计语言模型（Statistical Language Model）</strong></p><p>•计算句子概率模型</p><p>•n元模型简化条件概率估算</p><p><strong>Word2Vec细节</strong></p><p>•输入词one-hot编码</p><p>•隐藏层权重矩阵映射输入到稠密向量</p><p>•输出层softmax回归分类器</p><p><strong>训练过程</strong></p><p>•使用梯度下降最小化代价函数</p><p><strong>生成模型（generative model）</strong></p><p><strong>频率学派与贝叶斯学派</strong></p><p><strong>频率学派</strong></p><p>•基于大样本理论，将概率看作频率的极限</p><p>•强调数据重复抽样和统计量性质</p><p><strong>贝叶斯学派</strong></p><p>•未知量视为随机，用概率分布描述</p><p>•先验信息与后验信息结合</p><p><strong>生成模型与判别模型对比</strong></p><p>•判别模型：直接学习决策函数或条件概率分布</p><p>•生成模型：学习联合概率密度分布再求条件概率分布</p><p><strong>生成式人工智能（Generative Artificial Intelligence, GAI）</strong></p><p>•通过学习训练数据分布模型生成新数据</p><p>•AIGC具体应用：生成文字、图像、音频、视频等内容</p><p><strong>人造分布与真实分布</strong></p><p>•人脸、狗脸等服从特定概率分布</p><p>•利用神经网络拟合人造分布逼近真实分布</p><p><strong>关键问题</strong></p><p>1如何设计网络模型模拟客观分布</p><p>2如何度量两个分布差距</p><p><strong>KL散度</strong></p><p>•成为度量两个分布差距的工具</p><p><strong>隐变量模型</strong></p><p>•构造桥梁间接减小真实分布与模型分布差异</p><p><strong>具体生成模型</strong></p><p><strong>生成对抗网络（GAN）</strong></p><p>•包含生成器和判别器两部分</p><p><strong>变分自动编码器（VAE）</strong></p><p>•结合自编码器与变分推断的思想</p><p><strong>扩散模型（Diffusion Model）</strong></p><p>•包含前向扩散过程和反向生成过程</p><p>•前向扩散过程：逐渐添加高斯噪音直至变为随机噪音</p><p>•反向生成过程：从随机噪音开始逐渐去噪生成图像</p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第五章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%BA%94%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%BA%94%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="5-循环神经网络"><a href="#5-循环神经网络" class="headerlink" title="5.循环神经网络"></a>5.循环神经网络</h1><p><a href="./5.%E5%BE%AA%E7%8E%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.pdf">5.循环神经网络.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>循环神经网络（RNN）总结</strong></p><p><strong>1. 问题介绍</strong></p><p>•如果输入单一词（如”beijing”），且无记忆特性，网络输出相同结果。</p><p>•若具备记忆功能，网络可根据前面的词调整输出，结果不同。</p><p><strong>2. 基本结构</strong></p><p><strong>•记忆单元</strong>：将网络输出保存在记忆单元中，与下一次输入联合进入网络。</p><p><strong>•输入顺序影响</strong>：输入序列的顺序会改变输出结果。</p><p><strong>•长序列处理</strong>：无论序列多长，均可逐次输入网络以得到最终结果。</p><p><strong>3. 扩展结构</strong></p><p><strong>•梯度问题</strong>：深度循环网络和双向RNN是其扩展形式。</p><p><strong>•长期依赖挑战</strong>：</p><p>◦梯度易消失（常见）或爆炸（少见但影响大）。</p><p><strong>4. 门控RNN</strong></p><p><strong>•LSTM（长短期记忆网络）</strong>：</p><p>◦包含遗忘门、输入门、细胞状态更新和输出门。</p><p>◦遗忘门决定丢弃哪些信息；输入门选择新信息存入细胞状态；细胞状态更新后生成输出。</p><p>◦可通过”窥视孔连接”让门层观察细胞状态。</p><p><strong>•GRU（门控递归单元）</strong>：</p><p>◦将遗忘门和输入门合并为更新门，简化模型结构。</p><p>◦参数减少约1&#x2F;3，效果接近LSTM，不易过拟合。</p><p><strong>5. 存在问题</strong></p><p><strong>•遗忘性</strong>：RNN对近期信息预测表现较好，但难以处理长时依赖问题。</p><p><strong>6. 应用</strong></p><p><strong>•序列向量操作</strong>：</p><p>◦图像分类、图像描述生成、情感分析、机器翻译、视频分类等。</p><p><strong>•生成模型</strong>：</p><p>◦自编码器用于降维或特征学习，变分自编码器（VAE）和生成对抗网络（GAN）推动生成式建模发展。</p><p><strong>7. 核心要点</strong></p><p>•RNN通过记忆单元实现序列数据处理，但存在梯度消失或爆炸的问题。</p><p>•LSTM和GRU通过门机制解决长期依赖问题，提升性能。</p><p>•广泛应用于自然语言处理、图像处理等领域。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>循环神经网络（RNN）</strong></p><p>•RNN的核心在于通过记忆单元实现对序列数据的处理。</p><p>•解决了传统神经网络无法记忆的问题。</p><p><strong>1. 问题介绍</strong></p><p>•如果没有记忆特性，输入相同部分时输出结果一致。</p><p>•引入记忆后，前序信息会影响后续输出结果。</p><p><strong>2. 基本结构</strong></p><p><strong>输入与记忆单元</strong></p><p>•网络将输出保存在记忆单元中。</p><p>•下一次输入时，联合当前输入和记忆单元作为新输入。</p><p><strong>输出机制</strong></p><p>•网络不仅输出结果，还会更新记忆单元。</p><p>•输入序列顺序影响最终输出结果。</p><p>•可以处理任意长度的序列数据。</p><p><strong>3. 存在的问题</strong></p><p><strong>记忆的遗忘性</strong></p><p>•对近期信息预测效果较好，但对长时依赖问题表现不佳。</p><p><strong>梯度消失或爆炸</strong></p><p>•深度循环网络中梯度经过多阶段传播后易消失或爆炸。</p><p><strong>4. 改进模型：门控RNN</strong></p><p><strong>长短期记忆（LSTM）</strong></p><p>•LSTM通过”门”控制信息的选择式通过。</p><p><strong>Step-by-Step</strong></p><p><strong>1遗忘门</strong>：决定从细胞状态中丢弃哪些信息。</p><p><strong>2输入门</strong>：确定新信息存入细胞状态的部分。</p><p><strong>3更新细胞状态</strong>：基于遗忘和输入操作更新细胞状态。</p><p><strong>4输出门</strong>：根据细胞状态确定输出部分。</p><p>•添加”窥视孔连接”优化门层观察细胞状态的能力。</p><p>•耦合遗忘门和输入门以简化决策过程。</p><p><strong>门控循环单元（GRU）</strong></p><p>•将遗忘门和输入门合并为更新门。</p><p>•混合细胞状态和隐藏状态，减少参数数量约1&#x2F;3。</p><p>•效果与LSTM相当，但更简单且不易过拟合。</p><p><strong>5. 应用</strong></p><p><strong>向量序列操作</strong></p><p>1图像分类</p><p>2图像描述生成</p><p>3情感分析</p><p>4机器翻译</p><p>5视频分类</p><p><strong>6. 扩展模型</strong></p><p><strong>自编码器相关</strong></p><p>•传统自编码器用于降维或特征学习。</p><p>•变分自动编码器（VAE）结合潜变量模型理论用于生成式建模。</p><p><strong>对抗模型</strong></p><p>•生成对抗网络（GAN）用于生成模型。</p><p>•对抗模型通过竞争机制提升生成质量。</p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第四章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%9B%9B%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E5%9B%9B%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="4-卷积神经网络"><a href="#4-卷积神经网络" class="headerlink" title="4.卷积神经网络"></a>4.卷积神经网络</h1><p><a href="./4.%E5%8D%B7%E7%A7%AF%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.pdf">4.卷积神经网络.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>总结概括</strong></p><p><strong>1. 卷积神经网络（CNN）简介</strong></p><p>卷积神经网络是一种特殊的神经网络，其核心在于使用卷积运算替代一般的矩阵乘法运算。它的主要目标是解决计算机视觉中的图像识别问题。与人类轻松识别图像不同，机器在处理视角变换、光照条件、背景干扰和物体变形等问题时面临巨大挑战。</p><p><strong>2. 动机与传统方法的不足</strong></p><p>•在CNN流行之前，图像处理依赖于提取边缘、纹理、线条等特征的传统方法，这些方法效率低且准确率不高。</p><p>•随着机器学习的发展，尤其是数据驱动算法的应用，CNN使得某些图像集上的机器识别准确率超过了人类。</p><p><strong>3. 卷积层的核心概念</strong></p><p><strong>•滤波器</strong>：由可学习的滤波器集合构成，滤波器尺寸通常较小（如5x5x3或3x3x3），深度与输入数据一致。</p><p><strong>•卷积操作</strong>：滤波器在输入数据上滑动，计算内积生成激活图，表示对特定视觉特征（如边界、颜色、轮廓）的反应。</p><p><strong>•输出结构</strong>：多个滤波器形成多张二维激活图，按深度方向堆叠构成卷积层输出。</p><p><strong>•局部连接与参数共享</strong>：</p><p>◦局部连接：利用图片特征的局部性，通过感受野提取特征。</p><p>◦参数共享：同一滤波器在不同位置共享参数，减少计算量。</p><p><strong>•空间排列</strong>：卷积层的输出深度由滤波器数量决定，滑动步长和边界填充为超参数。</p><p><strong>4. 池化层的作用</strong></p><p>池化层（如最大池化）通过降采样减少数据维度，保留重要特征并降低过拟合风险。</p><p><strong>5. 经典CNN模型</strong></p><p><strong>•VGGNet</strong>：</p><p>◦2014年由牛津大学和Google DeepMind提出，取得ILSVRC2014比赛分类第二名和定位第一名。</p><p>◦探索了网络深度与性能的关系，成功构建16~19层深的网络，错误率显著下降，泛化性强。</p><p><strong>•其他模型</strong>：</p><p>◦Inception module：通过多尺度卷积提升性能。</p><p>◦ResNet architecture：引入残差学习解决深层网络训练问题。</p><p>◦应用场景包括图像分类、目标定位、语义分割和风格迁移等。</p><p><strong>6. 总结</strong></p><p>卷积神经网络通过卷积层和池化层等结构，有效解决了图像识别中的复杂问题。经典模型如VGGNet、Inception和ResNet进一步推动了深度学习在计算机视觉领域的应用和发展。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>卷积神经网络概述</strong></p><p>•动机：图像识别任务的挑战</p><p>◦人类对图片识别的轻松性与机器面临的困难对比</p><p>◦视角变换、光照条件、背景干扰和物体变形等问题的影响</p><p>◦计算机在图像识别中准确率低的原因</p><p>•数据驱动算法的核心</p><p>◦图像分类无法通过简单规则实现</p><p>◦需要通过学习算法让机器自动学习特征进行分类</p><p>◦算法依赖于数据集</p><p><strong>传统方法与卷积神经网络的对比</strong></p><p>•传统图像处理方法</p><p>◦提取边缘、纹理、线条等特征</p><p>◦效率低且准确率不高</p><p>•卷积神经网络的优势</p><p>◦在某些图像集上机器识别准确率超过人类</p><p>◦卷积神经网络的作用及其重要性</p><p><strong>卷积（Convolution）</strong></p><p><strong>卷积层参数</strong></p><p>•滤波器集合构成卷积层参数</p><p>◦尺寸示例：5x5x3 或 3x3x3</p><p>◦宽度、高度可定义，深度需与输入一致</p><p>•前向传播过程</p><p>◦滑动滤波器计算内积生成激活图</p><p>◦激活图表示原图片对滤波器的反应</p><p>•特征学习</p><p>◦学习边界、颜色、轮廓等视觉特征</p><p>◦更高层可能学习复杂图案如蜂巢状或车轮状</p><p><strong>卷积层特性</strong></p><p><strong>局部连接</strong></p><p>•利用图片特征的局部性提取特征</p><p>•神经元感受野大小为滤波器宽高</p><p><strong>空间排列</strong></p><p>•输出深度由滤波器数量决定</p><p>•滑动滤波器时需指定步长</p><p>•边界填充作为超参数</p><p><strong>稀疏连接与参数共享</strong></p><p>•神经元仅与前一层部分神经元相关联</p><p>•参数共享减少模型复杂度</p><p><strong>池化（Pooling）</strong></p><p>•最大池化层示例 (2x2 池化核, 滑动 2, 无填充)</p><p>•池化作用：降维、保留关键信息</p><p><strong>CNN经典模型</strong></p><p><strong>VGGNet</strong></p><p>•开发背景与成就</p><p>◦2014年提出，ILSVRC2014比赛分类项目第二名、定位项目第一名</p><p>•探索深度与性能关系</p><p>◦构建16~19层深的卷积神经网络</p><p>◦错误率下降，泛化性好</p><p><strong>其他模型</strong></p><p>•Inception module</p><p>•Residual learning ResNet architecture</p><p>•Semantic segmentation</p><p>•Image classification Object localization</p><p>•Transferring style for image repainting</p><p><strong>实现案例</strong></p><p>•Pytorch实现LeNet</p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第三章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%89%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%89%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="3-神经网络优化和其他"><a href="#3-神经网络优化和其他" class="headerlink" title="3.神经网络优化和其他"></a>3.神经网络优化和其他</h1><p><a href="./3.%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C%E4%BC%98%E5%8C%96%E5%92%8C%E5%85%B6%E4%BB%96.pdf">3.神经网络优化和其他.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>总结概括</strong></p><p><strong>1. 常用激活函数</strong></p><p><strong>•Sigmoid缺点</strong>：</p><p>◦易导致梯度消失：在靠近0和1的两端，梯度接近0，影响参数更新。</p><p>◦初始化权重需谨慎：若初始化权重过大，会导致神经元饱和，无法更新参数。</p><p><strong>•ReLU优缺点</strong>（未详细提及，但作为对比）：</p><p>◦优点：缓解梯度消失问题。</p><p>◦缺点：可能造成神经元死亡。</p><p><strong>2. 常用损失函数</strong></p><p><strong>•回归问题</strong>：</p><p><strong>◦MSE（均方误差）</strong>：</p><p>▪优点：连续光滑，方便求导。</p><p>▪缺点：易导致梯度爆炸。</p><p><strong>◦MAE（平均绝对误差）</strong>：</p><p>▪优点：梯度稳定，不易爆炸。</p><p>▪缺点：不光滑，不便求导。</p><p><strong>◦Smooth L1 Loss</strong>：</p><p>▪特点：对离群点更鲁棒，梯度变化小。</p><p><strong>•分类问题</strong>：</p><p><strong>◦0-1损失函数</strong>：</p><p>▪不考虑误差程度，仅判断是否预测正确。</p><p><strong>◦交叉熵损失函数</strong>：</p><p>▪应用广泛，描述模型与理想模型的距离。</p><p><strong>◦Softmax Loss</strong>：</p><p>▪适用于多分类问题。</p><p><strong>◦Logistic Loss</strong>：</p><p>▪用于二分类问题。</p><p><strong>3. 深度模型优化方法</strong></p><p><strong>•随机梯度下降（SGD）</strong>：</p><p>◦每次使用一批数据计算梯度，避免全量数据计算的高成本。</p><p>◦优点：减少计算量，增加随机性，易于跳出局部极小点。</p><p><strong>•动量法（Momentum）</strong>：</p><p>◦增加动量帮助跳出鞍点或局部极小点。</p><p>◦参数更新基于当前梯度和历史梯度。</p><p><strong>•AdaGrad</strong>：</p><p>◦根据累积平方梯度调整学习率，平缓方向进步更大。</p><p><strong>•RMSProp</strong>：</p><p>◦改进AdaGrad，引入衰减率，避免学习率过快递减。</p><p><strong>•Adam</strong>：</p><p>◦结合RMSProp和Momentum，目前流行且高效。</p><p><strong>4. 数据处理与训练技巧</strong></p><p><strong>•数据预处理</strong>：</p><p><strong>◦中心化</strong>：每个特征维度减去均值，使数据变为0均值。</p><p><strong>◦标准化</strong>：调整不同特征维度的规模，常用方法包括除以标准差或缩放到[-1, 1]。</p><p><strong>•权重初始化</strong>：</p><p><strong>◦全0初始化</strong>：不可取，导致权重失去不对称性。</p><p><strong>◦随机初始化</strong>：打破对称性，但需注意初始化范围，避免梯度过小。</p><p><strong>•批标准化（Batch Normalization）</strong>：</p><p>◦标准化过程可微，减少不合理初始化问题，加快收敛速度。</p><p><strong>•防止过拟合</strong>：</p><p><strong>◦Dropout</strong>：依概率P保留神经元，简单有效，广泛应用于深度学习。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>联结主义（神经网络）大纲</strong></p><p><strong>一、常用的激活函数</strong></p><p>•Sigmoid缺点</p><p>◦造成梯度消失</p><p>▪在靠近1和0的两端时，梯度接近0</p><p>▪导致模型不收敛</p><p>▪初始化权重需非常小心，否则多数神经元会饱和</p><p>•ReLU优缺点</p><p>◦未详细列出，需补充具体优缺点内容</p><p>•其他激活函数</p><p>◦需补充具体内容</p><p><strong>二、常用的损失函数</strong></p><p><strong>（一）回归问题</strong></p><p>1MSE均方误差</p><p>◦定义与公式</p><p>◦优点：连续光滑，方便求导</p><p>◦缺点：可能导致梯度爆炸</p><p>2平均绝对误差（MAE）</p><p>◦定义与公式</p><p>◦优点：稳定梯度，不会导致梯度爆炸</p><p>◦缺点：在中心点不可求导</p><p>3Smooth L1 Loss</p><p>◦定义与公式</p><p>◦优点：对离群点更鲁棒，梯度变化小</p><p>◦缺点：未明确提及</p><p><strong>（二）分类问题</strong></p><p>10-1损失函数</p><p>◦定义与公式</p><p>◦特点：实际应用较少，主要用于衡量其他损失函数效果</p><p>2绝对值损失函数</p><p>◦内容未明确提及</p><p>3交叉熵损失函数</p><p>◦重要性与应用范围</p><p>◦不同标签定义下的Loss表达式</p><p>4Softmax Loss</p><p>◦多分类问题中的应用</p><p>5Logistic Loss</p><p>◦内容未明确提及</p><p><strong>三、深度模型中的优化</strong></p><p><strong>（一）优化目标</strong></p><p>•寻找参数θ以降低代价函数J(θ)</p><p>•包括训练集性能评估与正则化项</p><p><strong>（二）优化方法</strong></p><p>1批量算法</p><p>2随机梯度下降（SGD）</p><p>◦动机与实现方式</p><p>◦小批量随机采样重要性</p><p>◦学习率选择策略</p><p>3梯度下降法变式</p><p>◦SGD特点</p><p>◦Momentum</p><p>▪核心概念与作用</p><p>▪动量计算方法</p><p>◦AdaGrad</p><p>▪算法机制与优势</p><p>◦RMSProp</p><p>▪改进点与衰减率</p><p>◦Adam</p><p>▪RMSProp+Momentum结合</p><p><strong>（三）优化器选择</strong></p><p>•当前主流优化算法</p><p>•选择依据：使用者对算法熟悉程度及超参数调节能力</p><p><strong>四、数据处理和训练技巧</strong></p><p><strong>（一）数据预处理</strong></p><p>1中心化</p><p>◦方法：每个特征维度减去相应均值</p><p>◦应用场景：图像数据等</p><p>2标准化</p><p>◦方法：除以标准差或缩放到[-1,1]区间</p><p>◦目的：使不同特征维度处于相同规模</p><p><strong>（二）权重初始化</strong></p><p>1全0初始化</p><p>◦缺点：破坏神经元独立性</p><p>2随机初始化</p><p>◦方法：高斯随机化、均匀随机化</p><p>◦注意事项：避免初始化过小导致梯度流信号减弱</p><p><strong>（三）批标准化（Batch Normalization）</strong></p><p>•核心思想：将标准化过程应用于神经网络每一层</p><p>•优点：增强对不良初始化的鲁棒性，加快收敛速度</p><p><strong>（四）防止过拟合</strong></p><p>1Dropout</p><p>◦核心思想：依概率P保留神经元</p><p>◦实现方式：每次训练时部分神经元被设置为0</p><p><a href="https://www.notion.so/3-20d925f269ce81bebc87fc20071c5eeb?pvs=21">3.神经网络优化和其他</a></p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第二章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="2-神经网络"><a href="#2-神经网络" class="headerlink" title="2.神经网络"></a>2.神经网络</h1><p><a href="./2.%E7%A5%9E%E7%BB%8F%E7%BD%91%E7%BB%9C.pdf">2.神经网络.pdf</a></p><h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong>总结：联结主义（神经网络）</strong></p><p><strong>1. 机器学习定义</strong></p><p>机器学习是一门研究如何通过经验自动改进计算机算法性能的科学。具体定义包括：</p><p>•改善算法在特定任务中的性能。</p><p>•使用数据或经验优化程序性能标准。</p><p>•Tom Michael Mitchell 提出的定义：程序从经验 E 中学习，针对任务 T 和性能度量 P，随着经验增加，性能逐步提升。</p><p><strong>2. 机器学习的应用</strong></p><p>机器学习的核心目标是找到一个函数来完成任务，如语音识别、图像识别、下围棋和对话系统等。</p><p><strong>3. 神经元与自然计算机制</strong></p><p>•神经元是生物大脑的基本单位，负责接收输入、处理并输出信号。</p><p>•生物神经元的特点：需要达到一定阈值才能触发输出，抑制微弱信号。</p><p>•激活函数（Activation Function）模拟了这一特性，常用的是 S 型函数。</p><p><strong>4. 人工神经元</strong></p><p>•人工神经元通过加权求和的方式整合多个输入，并通过激活函数生成输出。</p><p>•多个神经元可以连接形成网络，完成更复杂的计算任务。</p><p><strong>5. 神经网络模型</strong></p><p>•神经网络由多层神经元组成，每层神经元与上下层相连。</p><p>•学习过程主要通过调整节点之间的连接权重实现。</p><p>•权重更新基于误差反向传播（Backpropagation），将输出误差分配到各层节点。</p><p><strong>6. 矩阵乘法的应用</strong></p><p>•矩阵乘法简化了神经网络中大量计算的过程。</p><p>•输入信号通过权重矩阵传递到下一层，激活函数应用于每个节点。</p><p><strong>7. 梯度下降与权重更新</strong></p><p>•梯度下降用于优化权重，通过链式法则计算误差函数关于权重的梯度。</p><p>•权重更新公式结合学习率和梯度值，逐步逼近最优解。</p><p><strong>8. 多层网络与反向传播</strong></p><p>•对于多层网络，误差从输出层逐层向前传播，更新每一层的权重。</p><p>•隐藏层节点的误差通过其对输出层的贡献计算得出。</p><p><strong>9. 构建神经网络</strong></p><p>•手动构建神经网络涉及定义网络结构、初始化权重、前向传播、误差计算和反向传播。</p><p>•现代机器学习库（如 TensorFlow、PyTorch）提供了便捷的 Linear 层调用方法，简化了神经网络的构建过程。</p><p><strong>核心要点</strong></p><p>•机器学习的目标是找到一个函数解决特定问题。</p><p>•神经网络通过模拟生物神经元的工作机制实现复杂任务。</p><p>•权重调整和误差反向传播是神经网络学习的核心。</p><p>•矩阵乘法和梯度下降技术显著提升了神经网络的效率和可扩展性。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p><strong>联结主义（神经网络）大纲</strong></p><p><strong>一、机器学习先导</strong></p><p>•机器学习的定义</p><p>◦人工智能科学：通过经验学习改善算法性能</p><p>◦计算机算法研究：自动改进的能力</p><p>◦数据或经验优化程序性能标准</p><p>•英文定义解析</p><p>◦程序从经验E中学习，针对任务T和性能度量P，性能随经验提升</p><p><strong>二、机器学习登场</strong></p><p>•语音识别示例</p><p>◦大量语音数据用于编写学习程序</p><p>•图像识别示例</p><p>◦大量图像数据用于编写学习程序</p><p>•机器学习的核心目标</p><p>◦寻找一个函数以解决特定任务</p><p><strong>三、机器学习框架</strong></p><p><strong>（一）监督学习</strong></p><p>•框架结构</p><p>◦函数集合</p><p>◦训练数据</p><p>◦函数优劣评估</p><p>•步骤详解</p><p>1定义函数集合</p><p>2评估函数优劣</p><p>3选择最佳函数</p><p>•示例流程</p><p>◦输入与输出映射关系</p><p><strong>（二）不同类型的任务</strong></p><p>•监督学习</p><p>◦回归分析</p><p>▪线性模型</p><p>▪非线性模型</p><p>◦分类任务</p><p>▪SVM、决策树、KNN等方法</p><p>•半监督学习</p><p>•迁移学习</p><p>•无监督学习</p><p>•强化学习</p><p>•深度学习</p><p><strong>四、神经元与自然计算机制</strong></p><p><strong>（一）生物神经元的工作原理</strong></p><p>•输入、处理与输出</p><p>◦输入信号通过树突进入</p><p>◦电信号沿轴突传输</p><p>◦输出信号由末梢传递</p><p>•动物大脑的特点</p><p>◦并行处理能力</p><p>◦模糊性作为功能的一部分</p><p><strong>（二）激活函数</strong></p><p>•生物神经元的非线性特性</p><p>◦不是简单的输入输出线性关系</p><p>◦存在阈值机制</p><p>•数学表示</p><p>◦阶跃函数</p><p>◦S型函数</p><p>▪更平滑、更自然的激活方式</p><p><strong>（三）人工神经元</strong></p><p>•多个输入的处理</p><p>◦输入加权求和</p><p>◦总和作为S型函数输入</p><p>•输出控制</p><p>◦低于阈值时抑制输出</p><p>◦达到阈值时激发输出</p><p><strong>五、神经网络的构建</strong></p><p><strong>（一）几个神经元的连接</strong></p><p>•复杂计算能力</p><p>◦树突收集信号并合并</p><p>◦达到阈值时触发输出</p><p>•网络结构</p><p>◦神经元层的概念</p><p>◦层间全连接</p><p><strong>（二）人工模型</strong></p><p>•参数调整</p><p>◦调整节点间的连接强度</p><p>◦权重优化</p><p>•矩阵乘法的应用</p><p>◦压缩计算过程</p><p>◦提高计算效率</p><p><strong>六、权重学习与误差反向传播</strong></p><p><strong>（一）权重学习</strong></p><p>•单节点权重调整</p><p>◦使用误差指导改进</p><p>•多节点权重更新</p><p>◦平均分配误差</p><p>◦按贡献比例分配误差</p><p><strong>（二）误差反向传播</strong></p><p>•多输出节点的情况</p><p>◦错误按权重比例分配</p><p>•多层网络中的应用</p><p>◦逐层反向传播误差</p><p>◦隐藏层误差计算方法</p><p><strong>七、梯度下降与权重更新</strong></p><p>•梯度下降原理</p><p>◦解出误差函数关于权重的梯度</p><p>◦链式法则的应用</p><p>•权重更新实例</p><p>◦实际操作步骤</p><p><a href="https://www.notion.so/2-20d925f269ce80b1bc26fbc5de50a490?pvs=21">2.神经网络</a></p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术第一章</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%80%E7%AB%A0/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E7%AC%AC%E4%B8%80%E7%AB%A0/</url>
    
    <content type="html"><![CDATA[<h1 id="1-人工智能简介"><a href="#1-人工智能简介" class="headerlink" title="1.人工智能简介"></a>1.人工智能简介</h1><p><a href="./1.%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E7%AE%80%E4%BB%8B.pdf">1.人工智能简介.pdf</a></p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p><strong>人工智能简介总结</strong></p><p><strong>1定义与起源</strong></p><p>◦人工智能（AI）没有统一定义，但其核心是模拟和扩展人类智能。</p><p>◦1956年达特茅斯会议首次提出AI定义：让机器像人一样行动并具备智能。</p><p>◦学术观点包括：</p><p>▪Nils J. Nilsson：AI是关于知识的学科，研究如何表示、获取和使用知识。</p><p>▪Patrick Winston：AI是使计算机完成过去只有人类才能完成的智能任务。</p><p><strong>2发展与应用</strong></p><p>◦经过半个世纪发展，AI已从简单的人类智能模拟转向研究智能活动规律，构建智能系统或硬件。</p><p>◦应用领域广泛，包括图像识别、语音识别、语义识别、人机对话、自动驾驶等。</p><p>◦关键技术包括语音识别、图像识别、自然语言处理、机器学习等。</p><p><strong>3三要素：数据、算力、算法</strong></p><p><strong>◦数据</strong>：海量数据为AI提供燃料，训练模型需要百万级甚至更多数据量。数据隐私化和私域化成为趋势。</p><p><strong>◦算力</strong>：AI芯片（如GPU、NPU）大幅提升运算能力，加速深度学习训练。量子计算可能带来计算能力的新突破。</p><p><strong>◦算法</strong>：深度学习突破传统浅层算法瓶颈，自动化机器学习（AutoML）、联邦学习、因果学习等成为研究热点。</p><p><strong>4未来趋势</strong></p><p>◦数据驱动：数据量以指数形式增长，推动虚拟世界扩张。</p><p>◦算法融合：多学派方法融合发展，追求可解释性AI（XAI）。</p><p>◦技术创新：无监督预训练、神经网络结构优化等方向持续演进。</p><p><strong>5资源与社区</strong></p><p><strong>◦开源框架</strong>：PyTorch、TensorFlow、scikit-learn等提供强大工具支持。</p><p><strong>◦预训练模型</strong>：GloVe、BERT、FastText等助力快速开发。</p><p><strong>◦数据集</strong>：ImageNet、CoCo、GLUE等为研究提供丰富素材。</p><p><strong>◦学术资源</strong>：国际顶级期刊（如JMLR、IEEE TPAMI）和会议（如ICML、NeurIPS）推动AI理论与实践进步。</p><p><strong>6代表性学者</strong></p><p>◦国际：Michael I. Jordan、Yann LeCun、Geoffrey Hinton等。</p><p>◦国内：张钹、周志华、李航等。</p><p><strong>总结</strong>：人工智能通过数据、算力和算法的结合，不断拓展人类智能边界，其应用已渗透到多个领域，未来将更加注重可解释性、隐私保护和跨学科融合。</p><h2 id="大纲"><a href="#大纲" class="headerlink" title="大纲"></a>大纲</h2><p>人工智能概述<br>•    2022年，ChatGPT的发布引发了AI热潮。<br>•    人工智能并未有统一定义。<br>•    达特茅斯会议（1956）首次提出人工智能定义：机器模仿人类智能。<br>•    经过半个世纪发展，AI成为研究人类智能活动规律并构建智能系统的边缘学科。<br>1.1 人工智能的定义<br>•    Nils J. Nilsson观点：人工智能是关于知识的学科。<br>•    Patrick Winston观点：人工智能研究如何使计算机完成过去只有人类才能做的智能工作。<br>•    经典定义：智能主体可以理解数据及从中学习，并利用知识实现特定目标和任务的能力。<br>1.2 人工智能的学派<br>•    主要学派：符号主义及联结主义。<br>•    不同时代、学科背景的人对智慧的理解及其实现方法不同。<br>1.3 人工智能的应用<br>•    图像识别准确度大幅提升，商业化应用场景广泛。<br>•    语音识别技术突破为人机语音交互奠定基础。<br>•    语义识别技术进步实现多轮对话，开放域聊天仍面临挑战。<br>1.4 未来趋势<br>数据量<br>•    海量数据为AI发展提供燃料。<br>•    数据集丰富性和大规模性对算法训练至关重要。<br>•    数据隐私化、私域化趋势明显。<br>运算力<br>•    AI芯片提升运算效率，加速深度神经网络训练。<br>•    GPU在处理海量数据方面具有压倒性优势。<br>•    计算能力进步受限时，量子计算提供新思路。<br>算法<br>•    深度学习突破算法瓶颈，2006年Geoffrey Hinton提出”Deep Learning”概念。<br>•    机器学习自动化(AutoML)发展，追求自动化构建和使用。<br>•    分布式隐私保护方向演进，联邦学习保护输入数据。<br>•    数据和机理融合，追求实践效果与简洁表达。<br>•    神经网络模型结构沿模块化+层次化方向发展。<br>•    多学派方法融合发展，互补算法优缺点。<br>•    基于大规模无(自)监督预训练发展，利用无标签数据。<br>•    基于因果学习方法发展，构建可解释性AI。<br>1.5 其他资源<br>网络教学信息<br>•    斯坦福课程：<a href="http://v.163.com/special/opencourse/machinelearning.html">http://v.163.com/special/opencourse/machinelearning.html</a><br>•    CMU课程及相关视频链接<br>相关学术文章<br>•    COLT、ICML、CV、NIPS、JMLR等年度官网及期刊<br>相关学术期刊和会议<br>机器学习<br>•    学术会议：NIPS、ICML、ECML、COLT<br>•    学术期刊：《Machine Learning》、《Journal of Machine Learning Research》<br>数据挖掘<br>•    学术会议：SIGKDD、ICDM、SDM、PKDD、PAKDD<br>•    学术期刊：《Data Mining and Knowledge Discovery》、《IEEE Transactions on Knowledge and Data Engineering》<br>人工智能<br>•    学术会议：IJCAI、AAAI<br>•    学术期刊：《Artificial Intelligence》、《Journal of Artificial Intelligence Research》<br>数据库<br>•    学术会议：SIGMOD、VLDB、ICDE<br>•    其他顶级期刊如《IEEE Transactions on Pattern Analysis and Machine Intelligence》、《Neural Computation》<br>国内外研究者<br>国际代表性学者<br>•    Michael I. Jordan、Yann Lecun、Geoffrey E. Hinton等<br>国内知名学者<br>•    张钹、周志华、李航等<br>开源资源<br>开源代码<br>•    Pytorch、Tensorflow、scikit-learn等深度学习框架和工具库<br>预训练模型<br>•    Glove、FastText、ELMo、BERT等自然语言处理模型<br>数据集<br>•    ImageNet、CoCo、PASCAL VOC等计算机视觉数据集<br>•    GLUE、WikiText、SQuAD等自然语言处理数据集</p><p><a href="https://www.notion.so/1-20d925f269ce81ac84beddac2f983008?pvs=21">1.人工智能简介</a></p>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>前沿技术部分知识点</title>
    <link href="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <url>/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/</url>
    
    <content type="html"><![CDATA[<h3 id><a href="#" class="headerlink" title></a></h3><p><strong>都是PPT上的原话，概念的东西，不全，也不知道考不考</strong></p><h1 id="1-人工智能的定义（无官方统一定义）"><a href="#1-人工智能的定义（无官方统一定义）" class="headerlink" title="1.人工智能的定义（无官方统一定义）"></a>1.人工智能的定义（无官方统一定义）</h1><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs ada"><span class="hljs-number">1.1956</span>年的达特茅斯会议首次提出人工智能的定义：使一部机器的反应方式像一个人在行动时所依据的智能。<br><span class="hljs-number">2</span>.人工智能是关于知识的学科——怎样表示知识以及怎样获得知识并使用知识的学科。  <span class="hljs-comment">--Nils J. Nilsson（Stanford）</span><br><span class="hljs-number">3</span>.人工智能就是研究如何使计算机去做过去只有人才能做的智能工作。 <span class="hljs-comment">--Patrick Winston（MIT）</span><br></code></pre></td></tr></table></figure><h1 id="2-AI研究目的"><a href="#2-AI研究目的" class="headerlink" title="2.AI研究目的"></a>2.AI研究目的</h1><h3 id="-1"><a href="#-1" class="headerlink" title></a></h3><p>•人工智能研究目的是通过探索智慧的实质，扩展人类智能——促使智能主体会听（语音识别、机器翻译等）、会看（图像识别、文字识别等）、会说（语音合成、人机对话等）、会思考（人机对弈、专家系统等）、会学习（知识表示，机器学习等）、会行动（机器人、自动驾驶汽车等）。</p><h1 id="3-AI学派"><a href="#3-AI学派" class="headerlink" title="3.AI学派"></a>3.AI学派</h1><h3 id="-2"><a href="#-2" class="headerlink" title></a></h3><p><em><strong>联结主义，符号主义（两大主要主义）</strong></em>，行为主义</p><ul><li><p>联结主义：利用数学模型来研究人类认识的方法，用神经元的连接机制实现人工智能</p><ul><li>代表方法：神经网络，SVM</li></ul></li><li><p>符号主义：认知是通过对有意义的表示符号进行推导计算，并将学习视为逆向演绎，主张用显式的公理和逻辑体系搭建人工智能系统</p><ul><li>代表方法：专家系统，知识图谱</li></ul></li><li><p>行为主义：以控制论及感知-动作型控制系统原理模拟行为以复现人类智能</p><ul><li>代表方法：强化学习</li></ul></li></ul><h1 id="4-人工智能三要素"><a href="#4-人工智能三要素" class="headerlink" title="4.人工智能三要素"></a>4.人工智能三要素</h1><h4 id="数据，算力，算法"><a href="#数据，算力，算法" class="headerlink" title="数据，算力，算法"></a><strong>数据，算力，算法</strong></h4><h1 id="5-算法"><a href="#5-算法" class="headerlink" title="5.算法"></a>5.算法</h1><ul><li>传统机器学习算法：BP算法，SVM（支持向量机），Boosting，Logistic Regression</li></ul><ul><li>深度学习：MLP,CNN,RNN,LSTM</li></ul><h1 id="6-机器学习定义"><a href="#6-机器学习定义" class="headerlink" title="6.机器学习定义"></a>6.机器学习定义</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs">1.机器学习是一门人工智能的科学，该领域的主要研究对象是人工智能，特别是如何在经验学习中改善具体算法的性能。<br>2.机器学习是对能通过经验自动改进的计算机算法的研究。 <br>3.机器学习是用数据或以往的经验，以此优化计算机程序的性能标准。 <br><br></code></pre></td></tr></table></figure><h1 id="7-机器学习类型"><a href="#7-机器学习类型" class="headerlink" title="7.机器学习类型"></a>7.机器学习类型</h1><ul><li>监督</li><li>无监督</li><li>半监督</li><li>强化</li></ul><h1 id="8-常用激活函数"><a href="#8-常用激活函数" class="headerlink" title="8.常用激活函数"></a>8.常用激活函数</h1><ul><li>Sigmoid <img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609182345571.png" class title="image-20250609182345571"></li></ul><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609182254562.png" class title="image-20250609182254562"><p>​缺点：1.会造成梯度消失；2.输出不以0为中心（总是正值）可能导致下一层神经元的权重梯度方向单一，从而减缓训练收敛</p><ul><li><p>Tanh<img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609182656022.png" class title="image-20250609182656022"></p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609182647723.png" class title="image-20250609182647723"><p>缺点：梯度消失</p></li><li><p>ReLU   <img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609182810635.png" class title="image-20250609182810635"></p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609182745552.png" class title="image-20250609182745552"></li></ul><p>​1.优点：①极大地加速随机梯度下降法的收敛速度，并且因为是线性的，所有没有   梯度消失的问题</p><p>​②计算方法更简单</p><p>​2.缺点：当神经元输入为负导致其梯度持续为0时，该神经元将停止更新并“死亡”，这可以通过使用较小的学习率来缓解。</p><ul><li><p>ELU(不重要)</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609183154429.png" class title="image-20250609183154429"></li><li><p>Leaky ReLU(不重要)</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609183231240.png" class title="image-20250609183231240"></li></ul><h1 id="9-损失函数"><a href="#9-损失函数" class="headerlink" title="9.损失函数"></a>9.损失函数</h1><h4 id="①回归问题"><a href="#①回归问题" class="headerlink" title="①回归问题"></a>①回归问题</h4><ul><li><p>MSE均方误差</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609183522586.png" class title="image-20250609183522586"><p>优点：各点连续光滑，方便求导，具有稳定的解</p><p>缺点：不稳健，输入值距中心点较远时，用梯度下降法求解梯度会很大，可能梯度爆炸</p></li><li><p>平均绝对误差<img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609183720703.png" class title="image-20250609183720703"></p><p>   优点：任何输入都有稳定梯度，不会梯度爆炸，有稳定的解</p><p>​    缺点：中心点是折点，无法求导</p></li><li><p>smooth L1 loss</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609183844027.png" class title="image-20250609183844027"></li></ul><h4 id="②分类问题"><a href="#②分类问题" class="headerlink" title="②分类问题"></a>②分类问题</h4><ul><li><p>0-1损失函数</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609190133272.png" class title="image-20250609190133272"></li><li><p>绝对值损失函数</p></li></ul><p>​<img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609190141359.png" class title="image-20250609190141359"></p><ul><li>交叉熵损失函数</li></ul><p>​<img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609190247242.png" class title="image-20250609190247242"></p><ul><li><p>其他、</p><p>​                       <img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609190318081.png" class title="image-20250609190318081"></p></li></ul><h1 id="10-深度模型优化"><a href="#10-深度模型优化" class="headerlink" title="10.深度模型优化"></a>10.深度模型优化</h1><ul><li>经验风险最小化</li><li>批量算法</li><li>随机梯度下降</li></ul><h1 id="11-卷积神经网络"><a href="#11-卷积神经网络" class="headerlink" title="11.卷积神经网络"></a>11.卷积神经网络</h1><h3 id="-3"><a href="#-3" class="headerlink" title></a></h3><p>至少在网络的一层中使用卷积运算来替代一般的矩阵乘法运算的神经网络</p><p>用于更好的处理图像问题(如人脸识别)</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609190724426.png" class title="image-20250609190724426"><h1 id="12-卷积神经网路拓展"><a href="#12-卷积神经网路拓展" class="headerlink" title="12.卷积神经网路拓展"></a>12.卷积神经网路拓展</h1><ul><li><p>VGGNet</p></li><li><p>GoogLeNet</p></li><li><p>ResNet</p></li></ul><h1 id="13-循环神经网络（RNN）"><a href="#13-循环神经网络（RNN）" class="headerlink" title="13.循环神经网络（RNN）"></a>13.循环神经网络（RNN）</h1><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609191228232.png" class title="image-20250609191228232"><h1 id="14-前馈网络不足"><a href="#14-前馈网络不足" class="headerlink" title="14.前馈网络不足"></a>14.前馈网络不足</h1><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs">1.连接存在层与层之间，每层的节点之间是无法连接的<br>2.输入输出维数固定，不能改变，无法处理变长的序列数据<br>3.假设每次输入独立，那么每次网络输出只依赖于当前输入<br></code></pre></td></tr></table></figure><h1 id="15-RNN存在的问题"><a href="#15-RNN存在的问题" class="headerlink" title="15.RNN存在的问题"></a>15.RNN存在的问题</h1><ul><li>有遗忘性</li><li>对于依赖近期信息的任务有良好的预测结果，而对依赖长时间信息的任务表现不好（例如梯度爆炸或梯度消失）</li></ul><h1 id="16-长期依赖问题"><a href="#16-长期依赖问题" class="headerlink" title="16.长期依赖问题"></a>16.长期依赖问题</h1><h3 id="-4"><a href="#-4" class="headerlink" title></a></h3><p><strong>循环神经网络在时间维度上非常深（梯度消失）</strong></p><h3 id="-5"><a href="#-5" class="headerlink" title></a></h3><p>改进：循环边改为线性依赖关系，或者增加非线性</p><h1 id="17-LSTM"><a href="#17-LSTM" class="headerlink" title="17.LSTM"></a>17.LSTM</h1><h3 id="-6"><a href="#-6" class="headerlink" title></a></h3><p>能处理长时间依赖的问题，但本质还是解决短时记忆问题的方法</p><ul><li>步骤<ul><li>Step1：决定丢弃信息</li><li>Step2：确定存放在细胞状态中的新信息</li><li>Step3：更新细胞状态</li><li>Step4：基于细胞状态得到输出</li></ul></li></ul><h1 id="18-自编码器"><a href="#18-自编码器" class="headerlink" title="18.自编码器"></a>18.自编码器</h1><h3 id="-7"><a href="#-7" class="headerlink" title></a></h3><p><em><strong>是神经网络的一种，经过训练后能尝试将输入复制到输出</strong></em></p><h3 id="-8"><a href="#-8" class="headerlink" title></a></h3><p>传统自编码器被用于降维或特征学习，今年与潜变量模型理论联系走向了生成式建模的道路</p><h1 id="19-生成对抗网络"><a href="#19-生成对抗网络" class="headerlink" title="19.生成对抗网络"></a>19.生成对抗网络</h1><h3 id="-9"><a href="#-9" class="headerlink" title></a></h3><p>两大模型：<strong>生成模型，对抗模型</strong></p><h1 id="20-降维"><a href="#20-降维" class="headerlink" title="20.降维"></a>20.降维</h1><h3 id="-10"><a href="#-10" class="headerlink" title></a></h3><p><strong>减少描述数据的特征数量的过程</strong>（一般方法为选择或提取）</p><h1 id="21-表示学习"><a href="#21-表示学习" class="headerlink" title="21.表示学习"></a>21.表示学习</h1><h3 id="-11"><a href="#-11" class="headerlink" title></a></h3><p><strong>通过在辅助监督学习任务上训练神经网络，从未标记的数据中提取特征</strong></p><h3 id="-12"><a href="#-12" class="headerlink" title></a></h3><p>word2vec是表示学习界的“Hello World”应用</p><img src="/2025/06/10/%E5%89%8D%E6%B2%BF%E6%8A%80%E6%9C%AF%E9%83%A8%E5%88%86%E7%9F%A5%E8%AF%86%E7%82%B9/image-20250609193047034.png" class title="image-20250609193047034"><h1 id="22-统计学领域两大学派"><a href="#22-统计学领域两大学派" class="headerlink" title="22.统计学领域两大学派"></a>22.统计学领域两大学派</h1><h3 id="-13"><a href="#-13" class="headerlink" title></a></h3><p>频率学派与贝叶斯学派（两者对未知参数的推断和估计有截然不同的观点）</p><h3 id="-14"><a href="#-14" class="headerlink" title></a></h3><ul><li>频率学派：基于大样本理论，把概率看作频率的极限，通过信心来推断总体参数，过程客观可重复</li><li>贝叶斯学派：任何未知量都是随机的，应该用概率分布去描述</li></ul><h1 id="23-隐变量模型用于在网络模型上模拟世界上的客观存在"><a href="#23-隐变量模型用于在网络模型上模拟世界上的客观存在" class="headerlink" title="23.隐变量模型用于在网络模型上模拟世界上的客观存在"></a>23.隐变量模型用于在网络模型上模拟世界上的客观存在</h1><h1 id="24-用KL散度度量两个分布之间的差距，最大似然估计让人造分布与真实分布更接近"><a href="#24-用KL散度度量两个分布之间的差距，最大似然估计让人造分布与真实分布更接近" class="headerlink" title="24.用KL散度度量两个分布之间的差距，最大似然估计让人造分布与真实分布更接近"></a>24.用KL散度度量两个分布之间的差距，最大似然估计让人造分布与真实分布更接近</h1><h1 id="25-常见深度学习框架"><a href="#25-常见深度学习框架" class="headerlink" title="25.常见深度学习框架"></a>25.常见深度学习框架</h1><h3 id="-15"><a href="#-15" class="headerlink" title></a></h3><p><strong>PyTorch,Theano,Keras,TensorFlow,Caffe等</strong></p><h3 id="-16"><a href="#-16" class="headerlink" title></a></h3><p>PyTorch,Theano,Keras基于Python，Caffe基于C++</p><h1 id="26-强化学习特征：奖励延迟，行为序列学习，动态互动"><a href="#26-强化学习特征：奖励延迟，行为序列学习，动态互动" class="headerlink" title="26.强化学习特征：奖励延迟，行为序列学习，动态互动"></a>26.强化学习特征：奖励延迟，行为序列学习，动态互动</h1><h1 id="27-知识图谱本质是为了表示知识"><a href="#27-知识图谱本质是为了表示知识" class="headerlink" title="27.知识图谱本质是为了表示知识"></a>27.知识图谱本质是为了表示知识</h1><h1 id="28-知识图谱定义（无官方定义，下列定义为参考）"><a href="#28-知识图谱定义（无官方定义，下列定义为参考）" class="headerlink" title="28.知识图谱定义（无官方定义，下列定义为参考）"></a>28.知识图谱定义（无官方定义，下列定义为参考）</h1><h3 id="-17"><a href="#-17" class="headerlink" title></a></h3><p>有一些相互连接的实体和他们的属性构成的（即一条条知识组成，每条知识表示为一个SPO三元组）</p><p>ps:SPO&#x3D;Subject，Predicate，Object</p><h1 id="29-常见知识图谱项目"><a href="#29-常见知识图谱项目" class="headerlink" title="29.常见知识图谱项目"></a>29.常见知识图谱项目</h1><ul><li>Cyc</li><li>WordNet</li><li>ConceptNet</li><li>Wikidata</li><li>OpenKG.CN（Chinese）</li></ul><h1 id="30-知识图谱技术"><a href="#30-知识图谱技术" class="headerlink" title="30.知识图谱技术"></a>30.知识图谱技术</h1><ul><li>知识表示，知识问答，语义搜索，知识链接，知识推理等</li></ul><h1 id="31-什么是知识表示"><a href="#31-什么是知识表示" class="headerlink" title="31.什么是知识表示"></a>31.什么是知识表示</h1><h3 id="-18"><a href="#-18" class="headerlink" title></a></h3><p>研究怎样用计算机符号来表示人脑中的知识，以及怎样通过符号之间的运算来模拟人脑推理过程</p><h1 id="32-知识图谱分布式表示"><a href="#32-知识图谱分布式表示" class="headerlink" title="32.知识图谱分布式表示"></a>32.知识图谱分布式表示</h1><h3 id="-19"><a href="#-19" class="headerlink" title></a></h3><p>在保留语义的同时，将知识图谱中的实体和关系映射到连续的稠密的低维的向量空间</p><h1 id="33-知识融合案例"><a href="#33-知识融合案例" class="headerlink" title="33.知识融合案例"></a>33.知识融合案例</h1><ul><li>医疗健康</li><li>金融</li><li>电商</li><li>农业</li></ul>]]></content>
    
    
    <categories>
      
      <category>前沿技术</category>
      
    </categories>
    
    
    <tags>
      
      <tag>邹建</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
